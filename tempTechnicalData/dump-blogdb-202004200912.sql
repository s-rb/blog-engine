-- MySQL dump 10.13  Distrib 5.5.62, for Win64 (AMD64)
--
-- Host: localhost    Database: blogdb
-- ------------------------------------------------------
-- Server version	8.0.19

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `captcha_codes`
--

DROP TABLE IF EXISTS `captcha_codes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `captcha_codes` (
  `id` int NOT NULL,
  `code` tinytext NOT NULL,
  `secret_code` tinytext NOT NULL,
  `time` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `captcha_codes`
--

LOCK TABLES `captcha_codes` WRITE;
/*!40000 ALTER TABLE `captcha_codes` DISABLE KEYS */;
INSERT INTO `captcha_codes` VALUES (233,'ogire','t6jgqbvjxtlckeyk0g7v1b','2020-04-20 08:13:00');
/*!40000 ALTER TABLE `captcha_codes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `global_settings`
--

DROP TABLE IF EXISTS `global_settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `global_settings` (
  `id` int NOT NULL,
  `code` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `value` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `global_settings`
--

LOCK TABLES `global_settings` WRITE;
/*!40000 ALTER TABLE `global_settings` DISABLE KEYS */;
INSERT INTO `global_settings` VALUES (130,'MULTIUSER_MODE','Многопользовательский режим','YES'),(131,'POST_PREMODERATION','Премодерация постов','YES'),(132,'STATISTICS_IS_PUBLIC','Показывать всем статистику блога','YES');
/*!40000 ALTER TABLE `global_settings` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `hibernate_sequence`
--

DROP TABLE IF EXISTS `hibernate_sequence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `hibernate_sequence` (
  `next_val` bigint DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `hibernate_sequence`
--

LOCK TABLES `hibernate_sequence` WRITE;
/*!40000 ALTER TABLE `hibernate_sequence` DISABLE KEYS */;
INSERT INTO `hibernate_sequence` VALUES (234),(234),(234),(234),(234),(234),(234),(234);
/*!40000 ALTER TABLE `hibernate_sequence` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `post_comments`
--

DROP TABLE IF EXISTS `post_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `post_comments` (
  `id` int NOT NULL,
  `text` text NOT NULL,
  `time` datetime NOT NULL,
  `parent_id` int DEFAULT NULL,
  `post_id` int DEFAULT NULL,
  `user_id` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKc3b7s6wypcsvua2ycn4o1lv2c` (`parent_id`),
  KEY `FKaawaqxjs3br8dw5v90w7uu514` (`post_id`),
  KEY `FKsnxoecngu89u3fh4wdrgf0f2g` (`user_id`),
  CONSTRAINT `FKaawaqxjs3br8dw5v90w7uu514` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`),
  CONSTRAINT `FKc3b7s6wypcsvua2ycn4o1lv2c` FOREIGN KEY (`parent_id`) REFERENCES `post_comments` (`id`),
  CONSTRAINT `FKsnxoecngu89u3fh4wdrgf0f2g` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `post_comments`
--

LOCK TABLES `post_comments` WRITE;
/*!40000 ALTER TABLE `post_comments` DISABLE KEYS */;
INSERT INTO `post_comments` VALUES (83,'Комментарий 1<div><span style=\"font-family: Roboto, Helvetica, Arial, sans-serif; font-size: 14px; background-color: rgb(242, 242, 242);\">На следующем слайде вы видите передвижной пункт наблюдения образца 1989 года – это микроавтобус «Додж», который использовали ФБР. Один парень купил этот автомобиль на аукционе и затем выложил видео на YouTube. На крыше машины расположена антенна для прослушивания дома объекта наблюдения, каждая из передних и задних фар снабжена микрофоном, вы видите оставшиеся от них отверстия, а рейлинги на крыше снабжены видеокамерами. Внутри расположены мониторы видеонаблюдения за объектом, а также туалет и кондиционер. SecuritySense: конечно, он не такой симпатичный, как микроавтобус на следующем слайде, но если вы увидите такой на своей улице, знайте, что вы облажались. Agent X: наблюдатели также могут использовать специальное транспортное средство для визуальной слежки, которое у нас в Англии называется boot fit, а в Америке — trunk fit. В такой машине оператор наблюдения находится в багажнике. Это не очень удобно, но зато наблюдатель может вести видеосъемку, делать фотографии и просто наблюдать за объектом из автомобиля, который выглядит совершенно пустым. Это особенно удобно там, где припаркованный здоровенный фургон сразу же привлечет внимание. На слайде вы видите такой автомобиль без водителя и пассажиров в салоне, но наблюдателя выдает отблеск объектива камеры, расположенной за задним стеклом. Такую слежку можно проводить очень ограниченное время, потому что оперативник в багажнике рискует здоровьем, но это работает. Эти методы существуют годы и мал</span></div>','2020-04-08 10:15:49',NULL,34,2),(84,'Продолжаете картографировать? — Конечно, до сих пор в интересующих меня местах есть «белые пятна», поэтому не вижу причин останавливаться. Но в основном я отрисовываю локации своих будущих походов. — Как вы это делаете? Поделитесь секретами? — Процесс подготовки к походам в плане картографии выглядит следующим образом: открываю интересующий район и уточняю важные для меня объекты, чаще всего, — ручьи, лесные массивы и дороги. Уже на следующий день мои правки есть в ежедневной выгрузке данных из OSM от компании Geofabrika. После того, как скачан нужный регион, запускаю скрипты для генерации карт для Garmin. Так у меня получается максимально свежая и наиболее актуальная карта нужной мне территории. Процесс картографирования невероятно затягивает. И затягивает, прежде всего, тем, что добавленные тобой данные почти сразу можно использовать для практических целей. Когда знаешь, что через пару дней пойдешь по этой тропе или поедеш','2020-04-08 10:16:10',NULL,31,2),(85,'Ранее исследователи компании Abnormal Secutity сообщали о росте числа фишинговых атак, связанных с темой коронавируса. Злоумышленники маскируют свои письма под официальные сообщения студентам от руководства университетов или письма от Всемирной организации здравоохранения с подробным описанием мер безопасности для предотвращения инфекции. Кроме того, исследователи из охранной компании Sophos сообщили о десятках новых интернет-доменов со словом covid и о более 5 тыс. сертификатов HTTPS, ссылающихся на коронавирус.','2020-04-08 10:16:29',NULL,10,2),(107,'<h2 id=\"header-1\" style=\"margin: 1rem 0px; padding: 0px; font-size: 1.8rem; font-family: &quot;Open sans&quot;, sans-serif, Helvetica; background-color: rgb(255, 255, 255);\">Пример использования оператора UNION</h2><p style=\"margin: 1em 0px; padding: 0px; font-size: 16px; line-height: 1.5rem; text-align: justify; font-family: &quot;Open sans&quot;, sans-serif, Helvetica; background-color: rgb(255, 255, 255);\">В качестве примера возьмем две таблицы carriers (компании, оказывающие услуги доставки) и suppliers (поставщики) из базы данных для книжного интернет магазина Bookstore.</p><p style=\"margin: 1em 0px; padding: 0px; font-size: 16px; line-height: 1.5rem; text-align: justify; font-family: &quot;Open sans&quot;, sans-serif, Helvetica; background-color: rgb(255, 255, 255);\">Выведем имя компании (name) и дату окончания действия договора сотрудничества (contract_expiration_date) из обеих таблиц.</p>','2020-04-08 15:23:21',NULL,10,25),(108,'<strong>mail</strong>,&nbsp;\nВсе записи из таблицы А и совпавшие записи из таблицы B. Если совпадение отсутствует, то правая сторона будет содержать значение null, т.к. управляющая таблица левая, об этом говорит ключевое слово LEFT.\nВсе записи из таблицы А и совпавшие записи из таблицы B. Если совпадение отсутствует, то правая сторона будет содержать значение null, т.к. управляющая таблица левая, об этом говорит ключевое слово LEFT.\nВсе записи из таблицы А и совпавшие записи из таблицы B. Если совпадение отсутствует, то правая сторона будет содержать значение null, т.к. управляющая таблица левая, об этом говорит ключевое слово LEFT.','2020-04-08 15:25:09',85,10,25),(172,'Я в шоке! Это то чего так не хватало на Хабре!','2020-04-13 11:49:18',NULL,58,144),(173,'Это самый лучший комментарий!<div>Потому что заработали картинки ))</div><div><img src=\"images/upload/-18/404/65835/F40450D3BA015E06289BF2BC9B246451.jpg\"><br></div>','2020-04-13 13:01:31',NULL,71,144),(174,'И второй потрясающий комментарий тут написан.','2020-04-13 13:40:05',NULL,71,2),(179,'Не лайкнешь сам - никто не лайкнет :)','2020-04-13 13:48:16',NULL,175,2),(200,'Какой-то комменатарий без фото','2020-04-14 11:47:04',NULL,94,15),(201,'Попытка комментария с фото<div><img src=\"images/upload/-26/891/9718/B51599319F7C29B1EAB2830AA1C57E6F.jpg\"><br></div>','2020-04-14 11:47:28',NULL,94,15),(226,'Какой-то содержательный комментарий','2020-04-19 20:34:44',NULL,224,2);
/*!40000 ALTER TABLE `post_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `post_votes`
--

DROP TABLE IF EXISTS `post_votes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `post_votes` (
  `id` int NOT NULL,
  `time` datetime NOT NULL,
  `value` tinyint NOT NULL,
  `post_id` int DEFAULT NULL,
  `user_id` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK9jh5u17tmu1g7xnlxa77ilo3u` (`post_id`),
  KEY `FK9q09ho9p8fmo6rcysnci8rocc` (`user_id`),
  CONSTRAINT `FK9jh5u17tmu1g7xnlxa77ilo3u` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`),
  CONSTRAINT `FK9q09ho9p8fmo6rcysnci8rocc` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `post_votes`
--

LOCK TABLES `post_votes` WRITE;
/*!40000 ALTER TABLE `post_votes` DISABLE KEYS */;
INSERT INTO `post_votes` VALUES (77,'2020-04-08 10:15:16',1,46,2),(78,'2020-04-08 10:15:17',1,34,2),(79,'2020-04-08 10:15:18',-1,31,2),(80,'2020-04-08 10:15:19',1,55,2),(81,'2020-04-08 10:15:20',1,10,2),(82,'2020-04-08 10:15:21',-1,29,2),(86,'2020-04-08 10:18:59',1,61,2),(98,'2020-04-08 12:34:03',1,94,15),(99,'2020-04-08 15:22:33',1,94,25),(100,'2020-04-08 15:22:35',1,46,25),(101,'2020-04-08 15:22:37',-1,41,25),(102,'2020-04-08 15:22:38',-1,29,25),(103,'2020-04-08 15:22:40',1,52,25),(104,'2020-04-08 15:22:41',-1,3,25),(105,'2020-04-08 15:22:43',1,36,25),(106,'2020-04-08 15:22:44',1,69,25),(109,'2020-04-08 15:25:25',1,10,25),(111,'2020-04-08 18:17:51',1,94,2),(112,'2020-04-08 18:17:52',1,71,2),(113,'2020-04-08 18:17:55',1,52,2),(114,'2020-04-08 18:17:57',-1,58,2),(115,'2020-04-08 18:17:58',1,3,2),(139,'2020-04-13 11:19:21',1,61,138),(140,'2020-04-13 11:19:23',1,94,138),(142,'2020-04-13 11:20:02',-1,71,138),(150,'2020-04-13 11:26:35',1,94,144),(161,'2020-04-13 11:27:58',1,61,144),(162,'2020-04-13 11:28:06',-1,10,144),(165,'2020-04-13 11:28:16',1,69,144),(171,'2020-04-13 11:28:37',1,36,144),(178,'2020-04-13 13:47:43',1,175,2),(182,'2020-04-13 18:37:43',1,180,134),(199,'2020-04-14 11:30:49',1,180,15);
/*!40000 ALTER TABLE `post_votes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `posts` (
  `id` int NOT NULL,
  `is_active` bit(1) NOT NULL,
  `moderation_status` varchar(255) NOT NULL,
  `moderator_id` int DEFAULT NULL,
  `text` text NOT NULL,
  `time` datetime NOT NULL,
  `title` varchar(255) NOT NULL,
  `view_count` int NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK5lidm6cqbc7u4xhqpxm898qme` (`user_id`),
  KEY `FK6m7nr3iwh1auer2hk7rd05riw` (`moderator_id`),
  CONSTRAINT `FK5lidm6cqbc7u4xhqpxm898qme` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FK6m7nr3iwh1auer2hk7rd05riw` FOREIGN KEY (`moderator_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES (3,'','ACCEPTED',2,'Привет, Хабр! Продолжаю делать интернет магазин и изучать Blazor. В этой части расскажу о том как добавил в него возможность создания заказа, просмотра заказов и работу с последовательностью действий одно из которых может завершиться ошибкой. За подробностями добро пожаловать под кат.\n\nСодержание\n\nBlazor + MVVM = Silverlight наносит ответный удар, потому что древнее зло непобедимо\nBlazor Client Side Интернет Магазин: Часть 1 — Авторизация oidc (oauth2) + Identity Server4\nBlazor Client Side Интернет Магазин: Часть 2 — CI/CD\nBlazor Client Side Интернет Магазин: Часть 3 — Витрина товаров\nBlazor Client Side Интернет Магазин: Часть 4 — Добавления товара в корзину\nBlazor Client Side Интернет Магазин: Часть 5 — Просмотр корзины и работа с Stateful\nBlazor Client Side Интернет Магазин: Часть 6 — Создание заказа и работа с компенсирующими действиями\n\nСсылки\n\n→ Исходники\n→ Образы на Docker Registry\n\nSaga\n\nМне стало скучно и я решил имитировать ситуацию когда у нас есть два микросервиса — для корзины и оформления заказов. Обычно для таких ситуаций создается микросервис Оркестратор, который управляет последовательностью действий и выполняет компенсирующие действия. Например такое встроено в MassTransit, NServiceBus, MS Orleans (распределенные транзакции). Для примера я решил немного смоделировать ситуацию, когда нужно постучаться в два разных сервиса которые у вас нет возможности изменить. Google и FaceBook например. Хотя тут тоже лучше сделать это через сервер, а на бекенд послать один запрос. Тут максимально простой пример. Чуть посложнее надо было бы в LocalStorage браузера сохранять незавершенное состояние и по таймеру пытаться откатить, а не так топорно как я тут сделал.\nКод OrdersViewModel:\n','2020-04-08 09:29:56','Blazor Client Side Интернет Магазин: Часть 6 — Создание заказа и работа с компенсирующими действиями',1,2),(10,'','NEW',2,'NASA сообщает о резком росте числа кибератак, направленных на специалистов агентства, которым пришлось перейти на удалённый режим работы.&nbsp;<div><br></div><div><br></div><div>Как следует из служебной записки руководителя информационного отдела NASA, за последние несколько дней удвоилось число атак на системы космического агентства, кроме того, вдвое чаще происходят попытки фишинга.\n\nПоследний пункт, отмечают в NASA, вызывает особое беспокойство — он означает, что сотрудники агентства переходят по ссылкам на вредоносные сайты в два раза чаще, чем обычно. Попытки заставить пользователей зайти на сайт или открыть вредоносное приложение, вложенное в письмо, остаются одним из самых простых способов получить доступ к корпоративным сетям и персональным компьютерам работников агентства, заявляют в NASA. В меморандуме агентства отмечается, что для атаки злоумышленники часто используют информацию о коронавирусе.\n\n«Сотрудники NASA должны знать, что киберпреступники, пытающиеся получить доступ к конфиденциальной информации, логинам и паролям пользователей, активно используют пандемию COVID-19 как предлог для атаки на электронные устройства и сети NASA. В письмах с вредоносными ссылками часто содержатся запросы на пожертвования, информация о распространении и передаче вируса, мерах безопасности, получении льгот, фейковые новости о вакцинах».\n\nNASA — не единственное учреждение, которое зафиксировало рост кибератак на фоне пандемии COVID-19. Ранее исследователи компании Abnormal Secutity сообщали о росте числа фишинговых атак, связанных с темой коронавируса. Злоумышленники маскируют свои письма под официальные сообщения студентам от руководства университетов или письма от Всемирной организации здравоохранения с подробным описанием мер безопасности для предотвращения инфекции. Кроме того, исследователи из охранной компании Sophos сообщили о десятках новых интернет-доменов со словом covid и о более 5 тыс. сертификатов HTTPS, ссылающихся на коронавирус.\n</div>','2019-04-08 09:32:39','NASA сообщает о резком росте кибератак из-за перехода сотрудников на удалённую работу',10,2),(29,'','ACCEPTED',2,'В 2020, наверняка, достаточно сложно найти проект в описании стека которого не было бы одного из следующих слов: IaC, микросервисы, kubernetes, docker, aws/azure/gcloud, блокчейн, ML, VR и так далее. И это здорово! Прогресс не стоит на месте. Мы растем, вместе с нами растут наши проекты, появляются более удобные и функциональные инструменты, которые решают современные проблемы.\n\nЗдравствуйте. Так я хотел начать эту статью. Но, потом я пересмотрел некоторые вещи, пообщался со своими коллегами, и понял что был бы не прав. Всё ещё существуют проекты которым уже по 15+ лет, у которых менеджеры и участники староверы, а соответственно у этих проектов древний стек технологий, который достаточно сложно поддерживать в существующем зоопарке. И по каким-либо причинам глобально обновить этот проект не получается (заказчик — старовер, нет аппрува, проект очень большой, и миграция затягивается, или всех все устраивает), и приходится его поддерживать. Еще более неприятно когда подобный проект все еще активно девелопится. Это как снежный ком. Заказчик и публика требуют фич, код требует доставки, сервера требуют внимания и заботы… А битбакет — так вообще, перестал поддерживать меркуриал. К рассмотрению предлагается как раз такой случай.\n\nЧто будет рассмотрено: конвертация mercurial-git, переезд CI с CruiseControl.NET на TeamCity, с git-deployment на Octopus c небольшим описанием всего процесса.\n\nТекста получилось очень много, поэтому он будет разбит на отдельные части для облегчения восприятия. Тут будет оглавление.\nЧасть 1: что есть, почему оно не нравится, планирование, немного bash. Я бы назвал эту часть околотехнической.\nЧасть 2: teamcity.\nЧасть 3: octopus deploy.\nЧасть 4: за кадром. Неприятные моменты, планы на будущее, возможно FAQ. Скорее всего, тоже можно назвать околотехнической.\n\nЯ бы не назвал это руководством к повторению по многим причинам: недостаточное погружение в процессы проекта ввиду нехватки времени, недостаточное количество практики подобных вещей, огромный монолит, в котором все подпроекты тесно переплетены, и куча других нюансов которые заставляют гореть, удивляться, мириться с ними, но ни в коем случае не радуют. А также, ввиду особенностей проекта (он является достаточно уникальным), некоторые шаги будут подстроены исключительно под этот случай.\n\nКлассическое введение\n\nУ нас был mercurial репозиторий, 300+ (открытых!) бранчей, ccnet, еще один ccnet + git (для деплоев), и целое множество модулей проекта с собственными конфигами и отдельными клиентами, четыре окружения и целое множество пулов в IIS, а также cmd скрипты, SQL, больше пяти сотен доменов, две дюжины билдов, и активный девелопмент в придачу. Не то чтобы все это было необходимо, но это работало, причем неудобно и долго. Единственное что вызывало у меня опасение — это наличие других проектов требующих моего внимания. Ничто в процессе работы с задачами такого масштаба не бывает более опасным, чем отсутствие концентрации и прерывания.\nЯ знал, что рано или поздно мне придется уделять внимание другим задачам, и именно поэтому потратил огромное количество времени на изучение существующей инфраструктуры, чтобы впоследствии хотя бы по ней не возникало нерешаемых вопросов.\n\nПолное описание проекта привести, к сожалению, не могу, по причине NDA, так что будут рассмотрены общие технические моменты. Также будут закрашены все названия относящиеся к проекту. Прошу прощения за черную размазню на скринах.\n\nОдной из ключевых особенностей проекта является то, что у него есть некоторое количество модулей, которые имеют одно ядро, но отличаются его конфигурациями. Также есть модули с «особым» подходом, предназначенные для реселлеров и особо крупных клиентов. Один модуль может обслуживать больше одного клиента. Под клиентом следует понимать отдельную организацию или группу людей которые получают доступ к конкретному модулю. Каждый клиент получает доступ по собственному домену, имеет собственный дизайн и свои уникальные настройки по-умолчанию. Идентификация клиента происходит по домену который он использует.\n\nОбщую схему данной части проекта можно представить следующим образом:','2018-04-08 09:42:16','Обновление процесса CI/CD: подготовка и планирование',3,28),(31,'\0','ACCEPTED',2,'Александр Клянин — дизайнер из Уфы, увлекающийся туризмом и фотографией. Не так давно он с помощью данных из OpenStreetMap и личного усердия нарисовал настоящую географическую карту Южного Урала. Как он ее сделал, какие для этого использовал инструменты и почему не может остановиться, когда начинает картировать в OSM — обо всем этом он рассказал в интервью.\n\n— Когда и как вы познакомились с OpenStreetMap?\n\n— О проекте узнал достаточно давно, уже не вспомню когда именно. До 2018 года я использовал OSM только в качестве подложки в своем блоге, на которой отображал GPS-треки и маршруты походов. Но два года назад всё кардинально изменилось: я решил сделать один картографический проект и купил для этого хороший навигатор Garmin. Он-то меня и привел в мир OSM.\n\n— Что случилось?\n\n— Карта, которая шла с ним в комплекте, не была старой, но постепенно я стал находить на ней всё больше и больше неточностей, в основном не хватало дорог. Поэтому я начал искать более актуальные и детальные карты. Мне попался сайт maptourist.org, поддерживаемый пользователем ValentinAK, на котором выкладываются ежедневные сборки карт для Garmin из данных OSM. Кстати, в дальнейшем он мне очень помог в настройке и запуске генератора карт, когда я решил их собирать у себя на компьютере. Это очень важный момент, что карты были сделаны на основе OSM. Это означало, что теперь, когда я видел, что на карте что-то не так, я мог это исправить сам и тут же сделать новую карту для навигатора. Мне хотелось, чтобы мои карты были самыми точными, и я начал картировать в OSM.\n\n— Сложно было начать?\n\n— Нет. Изучил всё, что касается внесения правок в OSM, скачал редактор JOSM и по GPS-треку отрисовал недостающую дорогу. Это была моя самая первая правка. И все бы ничего, можно было бы закрыть редактор и забыть об OSM до следующей проблемы, но она появилась сразу же — я увидел на спутниковом снимке, что вокруг этой дороги столько интересных объектов, которых почему-то нет на карте. Нарисовал ручей, продлил его до реки, отметил сенокосную поляну, рядом еще одна, а между ними лесная дорога и тянется она далеко в лес… и всё это надо рисовать! Именно тогда я и начал активно заниматься уточнением OSM.\n\n— Продолжаете картографировать?\n\n— Конечно, до сих пор в интересующих меня местах есть «белые пятна», поэтому не вижу причин останавливаться. Но в основном я отрисовываю локации своих будущих походов.\n\n\n\n— Как вы это делаете? Поделитесь секретами?\n\n— Процесс подготовки к походам в плане картографии выглядит следующим образом: открываю интересующий район и уточняю важные для меня объекты, чаще всего, — ручьи, лесные массивы и дороги. Уже на следующий день мои правки есть в ежедневной выгрузке данных из OSM от компании Geofabrika. После того, как скачан нужный регион, запускаю скрипты для генерации карт для Garmin. Так у меня получается максимально свежая и наиболее актуальная карта нужной мне территории.\n\nПроцесс картографирования невероятно затягивает. И затягивает, прежде всего, тем, что добавленные тобой данные почти сразу можно использовать для практических целей. Когда знаешь, что через пару дней пойдешь по этой тропе или поедешь по этой дороге, хочется максимально отрисовать эти места. Но когда начинаешь рисовать одно, за этим тянется все остальное. Рисуешь лес, но заметил ручей. Начинаешь, пока не потерял, рисовать его. Дошел до истока, отметил. Пошел вниз. Пока вел к реке, нашел еще с десяток ответвлений — их тоже приходится отрисовывать. После подтягиваются лесные дороги с бродами через эти ручьи и еще что-нибудь… Так постепенно ты оказываешься значительно дальше, чем планировал, но остановиться и перестать рисовать — уже практически невозможно.','2020-03-08 09:44:32','Александр Клянин: «До 2018 года я использовал OSM только в качестве подложки в своем блоге»',1,28),(34,'','ACCEPTED',2,'В наш цифровой век технически грамотных противников мы забываем о том, что существует необходимость использования физического наблюдения за целью методами «старой школы». Многие организации используют группы наблюдения: внутренние для правительственных учреждений или внешние, нанятые для выполнения конкретной задачи. Цели этих групп варьируются от подозреваемых в терроризме до людей, обвиняемых в фиктивных страховых исках.\n\nВ то время как большинство людей думают, что они никогда не окажутся под слежкой, некоторые профессии увеличивают эту вероятность. Например, если вы являетесь журналистом, который встречается со своими источниками информации только лицом к лицу, то можете стать мишенью для наблюдения, особенно если источник является осведомителем или имеет информацию, которую его работодатель предпочел бы не давать. Также не стоит считать невероятной возможность слежки за хакером, пентестером, спикером или участником DEFCON.\n\n\n\nЭти команды наблюдателей — не одинокие частные детективы, сидящие в своей машине в конце улицы, на которой вы живете, а высококвалифицированные люди, чья работа заключается в том, чтобы оставаться незамеченными. Они наблюдают, идентифицируют ваши контакты и документируют все, что видят или слышат. Они стремятся выглядеть людьми, которых вы не сможете описать, если вас об этом попросят. Их методы слежки очень мало изменились за десятилетия, потому что эти методы реально работают.\n\nЭтот доклад посвящен методам мобильного и пешего наблюдения, которые используют такие группы. Спикеры посоветуют, как определить, не наблюдают ли за вами, и каким образом можно усложнить жизнь этим наблюдателям.\n\nAgent X: давайте сразу перейдем к сути дела. Почему мы решили посвятить этот разговор наблюдению? Мы будем обсуждать вопросы слежки за людьми образца, скажем 1983 года, а не рассказывать о современных технических методах наблюдения.\n\nSecuritySense: … типа Facebook.\n\nAgent X: возможно. Итак, не являетесь ли вы целью наблюдения?\n\nSecuritySense: вполне возможно, что в этом зале присутствуют люди, которые представляют интерес для слежки. Крайний справа на слайде – Зак Франклин, который вел DefCon в течение 15 лет, но и сам DefCon может быть нацелен на вас. На этом слайде вы видите Мишель Мэдиган. Некоторые из вас помнят ее нападки на нашу конференцию, так что мы решили нанести ответный удар собственной командой наблюдения, работавшей под прикрытием. Настоящее физическое наблюдение – это отличное времяпровождение.\n\n\n\nAgent X: … особенно когда вы пребываете во враждебном окружении. Если ваш домашний офис выглядит примерно так, как на этом слайде, значит, вы никогда не выходите из своего дома и не можете быть целью для наблюдения.\n\nSecuritySense: похоже, что у него в офисе серьезные проблемы для тех, кто захочет его прибрать.\n\n\n\nAgent X: итак, кто обычно ведет наблюдение? Это известные агентства из трех букв: NSA (Агентство национальной безопасности), FBI (Федеральное бюро расследований), CIA (Центральное разведывательное управление), KFC. Хотя, пожалуй, KFC здесь не причем, если вы не пытаетесь продать их секретный рецепт Северной Корее. Многие компании имеют возможность задействовать группы наблюдения, если испытывают в них потребность. Множество правительственных структур, особенно в Великобритании, такие как Налоговая служба и таможня ее Величества, разыскивают мошенников с помощью специальных групп наблюдения. Как частное лицо, вы можете пройти 2-х недельное обучение для работы в такой группе. Если вы бывший военный наблюдатель, достаточно предъявить 2 документа, удостоверяющих личность, заплатить 2314 фунтов, пройти курс и получить соответствующий сертификат на право заниматься оперативной слежкой.\n\n\n\nSecuritySense: это примерно 2000 долларов.\n\nAgent X: да, достаточно дорого. Итак, с самого начала доклада следует отметить важный факт. Весь транспорт, с которого ведется наблюдение, характеризуется так называемым «состоянием тепла». Предположим, вы начали наблюдение за целью в 10 утра и ведете его целый день. Каждый раз, как вы контактируете с целью или привлекаете внимание цели, это состояние падает до тех пор, пока вы окончательно не спалитесь, как этот тост. Например, врезавшись своей машиной в автомобиль цели наблюдения.\n\n\n\nПоэтому в конце рабочего дня все операторы наблюдения сообщают, какой степени достигло их «состояние тепла». Как человек, находящийся под наблюдением, вы должны стремиться к тому, чтобы оно опустилось до нуля, то есть засечь наблюдение за собой и провалить незаметную слежку.\n\nСамо наблюдение состоит из 3-х основных этапов: Pickup, или засечка цели, Follow – преследование цели и Housing – наблюдение за домом цели. Больше всего разговоров у нас будет о преследовании, так как это самая веселая часть наблюдения, во время которой происходят основные события. О засечке, или захвате цели для наблюдения, мы поговорим кратко, потому что ее смысл – получить контроль над перемещениями цели в самом начале операции или операционного дня. Для этого наблюдатель должен иметь описание цели, координаты ее начального местонахождения и возможные пути перемещения. Для захвата цели в первую очередь используется стационарный пост наблюдения, например, соседняя квартира или дом напротив.\n\nSecuritySense: на следующем слайде белое здание слева – это российское посольство в Вашингтоне, а домик напротив него, показанный справа – это стационарный пост наблюдения ФБР. Они владели этой недвижимостью и вели наблюдение за зданием через дорогу на протяжении многих лет.\n\n\n\nВы можете спросить, где же огромные камеры наблюдения, так вот, никто из целей не проходит через главный вход, они всегда выходят через заднюю дверь на соседнюю улицу.\n\nAgent X: наблюдатели также используют стационарные скрытые камеры с дистанционным управлением, которые автоматически включаются при появлении или удалении объекта наблюдения. Они также широко используют мобильные пункты наблюдения. На следующем слайде вы видите передвижной пункт наблюдения образца 1989 года – это микроавтобус «Додж», который использовали ФБР. Один парень купил этот автомобиль на аукционе и затем выложил видео на YouTube. На крыше машины расположена антенна для прослушивания дома объекта наблюдения, каждая из передних и задних фар снабжена микрофоном, вы видите оставшиеся от них отверстия, а рейлинги на крыше снабжены видеокамерами. Внутри расположены мониторы видеонаблюдения за объектом, а также туалет и кондиционер.\n\n\n\nSecuritySense: конечно, он не такой симпатичный, как микроавтобус на следующем слайде, но если вы увидите такой на своей улице, знайте, что вы облажались.\n\n\n\nAgent X: наблюдатели также могут использовать специальное транспортное средство для визуальной слежки, которое у нас в Англии называется boot fit, а в Америке — trunk fit. В такой машине оператор наблюдения находится в багажнике. Это не очень удобно, но зато наблюдатель может вести видеосъемку, делать фотографии и просто наблюдать за объектом из автомобиля, который выглядит совершенно пустым. Это особенно удобно там, где припаркованный здоровенный фургон сразу же привлечет внимание. На слайде вы видите такой автомобиль без водителя и пассажиров в салоне, но наблюдателя выдает отблеск объектива камеры, расположенной за задним стеклом. Такую слежку можно проводить очень ограниченное время, потому что оперативник в багажнике рискует здоровьем, но это работает.\n\n\n\nЭти методы существуют годы и мало изменились. Есть кинофильм, снятый британцами в 1974 году, которым они поделились с нашими американскими друзьями в рамках «особых отношений».\nНа экране демонстрируется отрывок фильма. Диктор: машина сопровождения остается на месте, и как только автомобиль цели проходит мимо нее, наблюдатель передает информацию другой оперативной машине, которая должна следовать за объектом наблюдения. Машина Брауна движется на запад, и если он посмотрит в зеркало заднего вида, то не увидит ничего подозрительного. Однако примерно в километре от дома из переулка на дорогу выезжает зеленый «Магнум», который следует за Брауном. Это выглядит как обычный дорожный трафик, и хотя цель не увидела никаких «висящих на хвосте» машин, большую часть времени Браун находился под наблюдением.\n\nКлючевой фразой является «находился под наблюдением». Машины наблюдателей не сопровождают цель постоянно, не едут прямо за ней, потому что лучше потерять объект, чем провалить операцию из-за того, что объект заметит за собой слежку. Вы слышали, как оперативники открыто переговариваются по радио. Этот способ передачи сообщений давно устарел, и в наше время для экономии времени и большей оперативности используются краткие кодовые фразы. Это также позволяет скрыть местоположение и направление движения цели, потому что если наблюдатель не использует шифрование, его сообщение можно перехватить, и посторонний человек или сам объект окажется в курсе происходящего. Вот так звучит сообщение в старой классической манере: «Ожидаем. Цель вышла из своего дома в красной бейсболке, синей майке, серых брюках и черных ботинках. Объект садится в свою машину. Теперь он отъезжает и поворачивает налево к перекрестку Хай Стрит и Уотер Лейн», а так – его современный эквивалент: «Семьдесят семь. Альфе 1 от Чарли 1. Синий на сером. Черные туфли, красная бейсболка. Выполнил Браво 1. Мобильный 91 желтый 2». Звучит как чушь собачья, но команда наблюдателей понимает, что последняя часть сообщения использует так называемый spot code – обозначения, которые наносятся на карты местности и позволяют указать местоположение цели и направление движения вместо того, чтобы произносить названия улиц: «Машина цели приближается к перекрестку В4668 и А47. Включил правый поворотник. Сейчас цель повернула направо, направляясь к Earl Shilton».\n\n\n\nПосмотрев на спот-карту, можно просто сказать: «Браво 1 на красной шестерке следует направо. Браво 1 совершил «направо», 91 Красная пятерка», и все оперативники понимают, где находится цель и куда она направляются.\n','2020-04-07 09:45:05','Конференция DEFCON 26. Виляние хвостом: скрытое пассивное наблюдение. Часть 1',1,28),(36,'','ACCEPTED',2,'<span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">В одном из разделов математики существует достаточно забавная задача про сумму чисел, связанных с натуральным рядом, и на первый взгляд кажется, что она достаточно проста, но при более глубоком погружении в тематику, приходит ощущение полной беспомощности.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Вся моя жизнь неразрывно связана с математикой. В голове постоянно рождаются мысли: «Почему именно так и какое этому объяснение?». Мне нравится находить разные способы решения интересных задач.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><a name=\"habracut\" style=\"background-color: rgb(255, 255, 255); color: rgb(84, 142, 170); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px;\"></a><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Так в школьные годы после темы про квадратные уравнения у меня сразу появился ряд вопросов: есть ли альтернативные варианты и как будет выглядеть решение для уравнения высших степеней?</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">На первый вопрос достаточно быстро был получен утвердительный ответ — да, может.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Разность корней квадратного уравнения можно выразить с помощью теоремы Виета, выполнив несложные преобразования.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><div class=\"spoiler\" style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span class=\"spoiler_title\" style=\"border-bottom: 1px dotted; color: rgb(84, 142, 170); cursor: pointer;\">Пример для квадратного уравнения</span></div><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Кстати, а вы знали, что корни многочленов&nbsp;</span><math style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"></math><span class=\"MathJax_SVG\" id=\"MathJax-Element-10-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>n</mi></math>\" role=\"presentation\" style=\"display: inline-block; line-height: normal; font-size: 16px; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; background-color: rgb(255, 255, 255); position: relative;\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.395ex\" height=\"1.455ex\" viewBox=\"0 -520.7 600.5 626.5\" role=\"img\" focusable=\"false\" style=\"vertical-align: -0.246ex;\" aria-hidden=\"true\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><use xlink:href=\"#MJMATHI-6E\" x=\"0\" y=\"0\"><path stroke-width=\"1\" id=\"MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></use></g></svg><span class=\"MJX_Assistive_MathML\" role=\"presentation\" style=\"top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; height: 1px !important; width: 1px !important; overflow: hidden !important; display: block !important; transition: none 0s ease 0s;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\">n</math></span></span><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">-ой степени образуют поле? ;)</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Дальнейшее углубление в теорию решений уравнений высших степеней открывало бесконечно много новых знаний в тех областях, о которых я даже и не подозревал.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">В результате ряда рассуждений стало понятно, что существуют некоторые преобразования над набором корней уравнений, которые могут давать интересные результаты, и с их помощью можно быстро и эффективно решать уравнения для степени меньше 5.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Я узнал о теории Галуа, теореме Абеля-Руффини, и т.д.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Информацию пришлось переваривать в течение нескольких лет.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br>','2020-04-08 09:47:54','Анализ дзета-функции Римана',4,28),(39,'','ACCEPTED',2,'Те, кто в теме, знают, сколько копий ломают в Интернете сами носители английского по поводу фразовых глаголов. Поэтому прошу воспринимать мои статьи на эту тему просто как рассуждения неглупого русскоязычного преподавателя с серьёзным стажем теоретической и практической работы и опытом длительного проживания в языковой среде. Где-то я могу ошибаться – поправляйте. Желательно в корректной форме.\n\nДля начала договоримся о терминах. Англо-английские словари содержат глаголы, состоящие из трёх частей (в предыдущей статье я упоминал let in on). Но, строго говоря, третья маленькая часть в них – всегда просто обычный предлог и в состав фразового глагола не входит, мы это разберём попозже. Будем исходить из того, что фразовый глагол состоит всегда из 2-х частей: собственно глагола и второй маленькой части (in, up, off и т.д.), которая может быть тремя разными вещами: предлогом, наречием, показывающим направление или частицей. И вот по тому, в какой роли выступает эта вторая мелкая часть, фразовые глаголы делятся на 3 типа. (Разные авторы используют разную терминологию и классификации, но давайте пока остановимся на предложенных.)\n\nЯ начну с 3-го типа, в котором эта мелкая часть является предлогом. Очень многие авторы относят к фразовым глаголам то, что, по сути, является обычным глаголом с определённым управлением. Управление глагола – это то, как глагол употребляется: с предлогом, без предлога, если с предлогом, то с каким. Допустим, одно из управлений русского глагола «смотреть» требует после себя предлога «на», а после «на» должен идти обязательно винительный падеж, потому что смотрят на кого/что. Другой падеж не подойдёт, иначе будут получаться предложения в стиле «я твой труба шатал». Шатают в русском языке кого/что. У глаголов бывает, как правило, несколько управлений. Допустим, у глагола «смотреть» есть другое управление, которое требует после себя предлога «за» (за ребёнком, например, или пожилым человеком) и после предлога «за» должен идти творительный падеж, потому что смотрят за кем/чем.\n\nГлагол depend («зависеть») требует после себя предлога on. Depend on – «зависеть ОТ». Тут просматривается вполне понятная логика. Pend – устаревшее слово «висеть». Висеть можно НА чём-то. Pend on – «висеть НА». Авторы популярного пособия по фразовым глаголам «English Phrasal Verbs In Use» считают depend on фразовым, в то время как, по сути, это обычный глагол, который требует после себя предлога «on» – такое у него управление. «On» здесь – именно предлог, а не наречие и не частица. Считать его фразовым – всё равно, что назвать фразовым глаголом русскую конструкцию «зависеть от». В русском языке вообще нет фразовых глаголов.\n\nИли возьмём более сложный пример – look for. Look for означает «искать». На самом деле это не фразовый глагол, а обычный глагол look – «смотреть», который в одном из своих управлений требует предлога for. For означает «для». Т.е. не просто смотреть (делать тебе нефига – сидишь смотришь), а смотреть ДЛЯ чего-то, С КАКОЙ-ТО ЦЕЛЬЮ.\n\nИли: Tesla runs on electricity – Тесла работает на электричестве. Обычный глагол run с управлением on, а учебники почему-то часто называют run on фразовым.\n\n2-й тип глаголов, которые традиционно относят к фразовым – это глаголы, в которых мелкая часть является тоже не частицей, а полноценным наречием, обозначающим направление. Например, bring up. Bring – «приносить», up – «наверх». Семья ужинает на 2-м этаже дома, ребёнку командуют: bring the dishes up – принеси тарелки наверх. Здесь up в прямом смысле означает «наверх». Конечно, bring up используется в переносных значениях. Например, bring up может означать «воспитывать». Но! «Воспитывать» – это просто расширенное, метафорическое значение буквального «приносить наверх». Ребёнок был маленький, родители через определённые действия как бы принесли его наверх, теперь большой. Так что bring up в значении «воспитывать», пожалуй, скорее идиома, чем фразовый глагол.\n\nТо же самое с глаголом look forward. Look forward буквально означает «смотреть вперёд», его расширенное, метафорическое значение – «ожидать с нетерпением». Например, I am looking forward to your visit – Я с нетерпением ожидаю вашего визита. Или «смотрю вперёд, в будущее, в котором состоится ваш визит». Так что приходится признать, что look forward – это, пожалуй, тоже скорее идиома, чем фразовый глагол. Так что отнесём его ко 2-му типу фразовых глаголов.\n\nИ, наконец, 1-й тип – собственно то, что и должно в строгом смысле называться фразовыми глаголами. В них вторая часть является не предлогом и не наречием, а в строгом смысле частицей. И эти частицы уже выполняют ту самую функцию, которую в русском обычно выполняют приставки.\n\nКо многим глаголам понятие «направления» попросту неприменимо. Например, drink. Нельзя пить вперёд или назад. У глагола drink up никогда не было буквального значения «пить наверх», он образован именно как фразовый. Up в нём – именно частица, несущая смысл «до конца, полностью» (соответствует русской приставке «до-» с тем же значением), поэтому drink up означает «до-пить». Этим и отличаются В СТРОГОМ СМЫСЛЕ ФРАЗОВЫЕ глаголы от идиом (2-й тип) – у идиом первоначально был буквальный смысл, а их современное значение – просто метафорическая надстройка.','2020-04-20 09:50:07','Про фразовые глаголы-2',0,28),(41,'','ACCEPTED',2,'Данная статья будет полезной тем, кто только начал знакомиться с микросервисной архитектурой и с сервисом Apache Kafka. Материал не претендует на подробный туториал, но поможет быстро начать работу с данной технологией. Я расскажу о том, как установить и настроить Kafka на Windows 10. Также мы создадим проект, используя Intellij IDEA и Spring Boot.\n\nЗачем?\n\nТрудности в понимании тех или иных инструментов часто связаны с тем, что разработчик никогда не сталкивался с ситуациями, в которых эти инструменты могут понадобиться. С Kafka всё обстоит точно также. Опишем ситуацию, в которой данная технология будет полезной. Если у вас монолитная архитектура приложения, то разумеется, никакая Kafka вам не нужна. Всё меняется с переходом на микросервисы. По сути, каждый микросервис – это отдельная программа, выполняющая ту или иную функцию, и которая может быть запущена независимо от других микросервисов. Микросервисы можно сравнить с сотрудниками в офисе, которые сидят за отдельными столами и независимо от коллег решают свою задачу. Работа такого распределённого коллектива немыслима без централизованной координации. Сотрудники должны иметь возможность обмениваться сообщениями и результатами своей работы между собой. Именно эту проблему и призвана решить Apache Kafka для микросервисов.\n\nApache Kafka является брокером сообщений. С его помощью микросервисы могут взаимодействовать друг с другом, посылая и получая важную информацию. Возникает вопрос, почему не использовать для этих целей обычный POST – reqest, в теле которого можно передать нужные данные и таким же образом получить ответ? У такого подхода есть ряд очевидных минусов. Например, продюсер (сервис, отправляющий сообщение) может отправить данные только в виде response’а в ответ на запрос консьюмера (сервиса, получающего данные). Допустим, консьюмер отправляет POST – запрос, и продюсер отвечает на него. В это время консьюмер по каким-то причинам не может принять полученный ответ. Что будет с данными? Они будут потеряны. Консьюмеру снова придётся отправлять запрос и надеяться, что данные, которые он хотел получить, за это время не изменились, и продюсер всё ещё готов принять request.\n\nApache Kafka решает эту и многие другие проблемы, возникающие при обмене сообщениями между микросервисами. Не лишним будет напомнить, что бесперебойный и удобный обмен данными – одна из ключевых проблем, которую необходимо решить для обеспечения устойчивой работы микросервисной архитектуры.\n\nУстановка и настройка ZooKeeper и Apache Kafka на Windows 10\n\nПервое, что надо знать для начала работы — это то, что Apache Kafka работает поверх сервиса ZooKeeper. ZooKeeper — это распределенный сервис конфигурирования и синхронизации, и это всё, что нам нужно знать о нём в данном контексте. Мы должны скачать, настроить и запустить его перед тем, как начать работу с Kafka. Прежде чем начать работу с ZooKeeper, убедитесь, что у вас установлен и настроен JRE.\n\nСкачать свежею версию ZooKeeper можно с официального сайта.\n\nИзвлекаем из скаченного архива ZooKeeper`а файлы в какую-нибудь папку на диске.\nВ папке zookeeper с номером версии, находим папку conf и в ней файл “zoo_sample.cfg”.\n\n\n\nКопируем его и меняем название копии на “zoo.cfg”. Открываем файл-копию и находим в нём строчку dataDir=/tmp/zookeeper. Прописываем в данной строчке полный путь к нашей папке zookeeper-х.х.х. У меня это выглядит так: dataDir=C:\\\\ZooKeeper\\\\zookeeper-3.6.0\n\nТеперь добавим системную переменную среды: ZOOKEEPER_HOME = C:\\ ZooKeeper \\zookeeper-3.4.9 и в конце системной переменной Path добавим запись: ;%ZOOKEEPER_HOME%\\bin;\n\nЗапускаем командную строку и пишем команду:\n\nzkserver\n\nЕсли всё сделано правильно, вы увидите примерно следующее.\n\n\n\nЭто означает, что ZooKeeper стартанул нормально. Переходим непосредственно к установке и настройке сервера Apache Kafka. Скачиваем свежую версию с официального сайта и извлекаем содержимое архива: kafka.apache.org/downloads\n\nВ папке с Kafka находим папку config, в ней находим файл server.properties и открываем его.\n\n\n\nНаходим строку log.dirs= /tmp/kafka-logs и указываем в ней путь, куда Kafka будет сохранять логи: log.dirs=c:/kafka/kafka-logs.\n\n\n\nВ этой же папке редактируем файл zookeeper.properties. Строчку dataDir=/tmp/zookeeper меняем на dataDir=c:/kafka/zookeeper-data, не забывая при этом, после имени диска указывать путь к своей папке с Kafka. Если вы всё сделали правильно, можно запускать ZooKeeper и Kafka.\n\n\n\nДля кого-то может оказаться неприятной неожиданностью, что никакого GUI для управления Kafka нет. Возможно, это потому, что сервис рассчитан на суровых нёрдов, работающих исключительно с консолью. Так или иначе, для запуска кафки нам потребуется командная строка.\n\nСначала надо запустить ZooKeeper. В папке с кафкой находим папку bin/windows, в ней находим файл для запуска сервиса zookeeper-server-start.bat, кликаем по нему. Ничего не происходит? Так и должно быть. Открываем в этой папке консоль и пишем:\n\n start zookeeper-server-start.bat\n\nОпять не работает? Это норма. Всё потому что zookeeper-server-start.bat для своей работы требует параметры, прописанные в файле zookeeper.properties, который, как мы помним, лежит в папке config. Пишем в консоль:\n\nstart zookeeper-server-start.bat c:\\kafka\\config\\zookeeper.properties \n\nТеперь всё должно стартануть нормально.\n\n\n\nЕщё раз открываем консоль в этой папке (ZooKeeper не закрывать!) и запускаем kafka:\n\nstart kafka-server-start.bat c:\\kafka\\config\\server.properties\n\nДля того, чтобы не писать каждый раз команды в командной строке, можно воспользоваться старым проверенным способом и создать батник со следующим содержимым:\n\nstart C:\\kafka\\bin\\windows\\zookeeper-server-start.bat C:\\kafka\\config\\zookeeper.properties\ntimeout 10\nstart C:\\kafka\\bin\\windows\\kafka-server-start.bat C:\\kafka\\config\\server.properties\n\nСтрока timeout 10 нужна для того, чтобы задать паузу между запуском zookeeper и kafka. Если вы всё сделали правильно, при клике на батник должны открыться две консоли с запущенным zookeeper и kafka.Теперь мы можем прямо из командной строки создать продюсера сообщений и консьюмера с нужными параметрами. Но, на практике это может понадобиться разве что для тестирования сервиса. Гораздо больше нас будет интересовать, как работать с kafka из IDEA.\n\nРабота с kafka из IDEA\n\nМы напишем максимально простое приложение, которое одновременно будет и продюсером и консьюмером сообщения, а затем добавим в него полезные фичи. Создадим новый спринг-проект. Удобнее всего делать это с помощью спринг-инициалайзера. Добавляем зависимости org.springframework.kafka и spring-boot-starter-web\n\n\n\n\n\nВ итоге файл pom.xml должен выглядеть так:\n\n\n\nДля того, чтобы отправлять сообщения, нам потребуется объект KafkaTemplate<K, V>. Как мы видим объект является типизированным. Первый параметр – это тип ключа, второй – самого сообщения. Пока оба параметра мы укажем как String. Объект будем создавать в классе-рестконтроллере. Объявим KafkaTemplate и попросим Spring инициализировать его, поставив аннотацию Autowired.\n\n@Autowired\nprivate KafkaTemplate<String, String> kafkaTemplate;\n\nВ принципе, наш продюсер готов. Всё что осталось сделать – это вызвать у него метод send(). Имеется несколько перегруженных вариантов данного метода. Мы используем в нашем проекте вариант с 3 параметрами — send(String topic, K key, V data). Так как KafkaTemplate типизирован String-ом, то ключ и данные в методе send будут являться строкой. Первым параметром указывается топик, то есть тема, в которую будут отправляться сообщения, и на которую могут подписываться консьюмеры, чтобы их получать. Если топик, указанный в методе send не существует, он будет создан автоматически. Полный текст класса выглядит так.\n\n@RestController\n@RequestMapping(\"msg\")\npublic class MsgController {\n\n    @Autowired\n    private KafkaTemplate<String, String> kafkaTemplate;\n\n    @PostMapping\n    public void sendOrder(String msgId, String msg){\n        kafkaTemplate.send(\"msg\", msgId, msg);\n    }\n}\n\nКонтроллер мапится на localhost:8080/msg, в теле запроса передаётся ключ и само сообщений.\n\nОтправитель сообщений готов, теперь создадим слушателя. Spring так же позволяет cделать это без особых усилий. Достаточно создать метод и пометить его аннотацией @KafkaListener, в параметрах которой можно указать только топик, который будет слушаться. В нашем случае это выглядит так.\n\n@KafkaListener(topics=\"msg\")\n\nУ самого метода, помеченного аннотацией, можно указать один принимаемый параметр, имеющий тип сообщения, передаваемого продюсером.\n\nКласс, в котором будет создаваться консьюмер необходимо пометить аннотацией @EnableKafka.\n\n@EnableKafka\n@SpringBootApplication\npublic class SimpleKafkaExampleApplication {\n\n    @KafkaListener(topics=\"msg\")\n    public void msgListener(String msg){\n        System.out.println(msg);\n    }\n\n    public st','2020-04-08 09:54:25','Apache Kafka для чайников',5,15),(46,'','ACCEPTED',2,'Всем привет! Мы рады представить вам первое крупное обновление WebStorm в этом году. В новой версии вы найдете много новых возможностей и долгожданных улучшений, включая поддержку Vuex и новую опцию для запуска Prettier при сохранении файлов.\n\nwebStorm-2020-1-released\n\nСкачать 30-дневную пробную версию WebStorm 2020.1 на сайте или с помощью Toolbox App. Полную версию могут использовать обладатели действующей подписки на WebStorm или All Products Pack, а также бесплатно студенты и разработчики опенсорсных проектов.\n\nА сейчас давайте рассмотрим основные улучшения подробнее.\n\nНовый шрифт для работы с кодом\n\nНа протяжении всего прошлого года мы разрабатывали специальный шрифт для работы с кодом, который бы помог нашим пользователям программировать с большим комфортом и свести напряжение глаз к минимуму. Результатом наших усилий стал JetBrains Mono, новый шрифт с открытым исходным кодом. Начиная с версии 2020.1, JetBrains Mono выбран по умолчанию в WebStorm и других наших IDE. Возможность включить другой шрифт, разумеется, также осталась.\n\njetbrains-mono\n\nБолее полезная быстрая документация\n\nWebStorm 2020.1 поможет вам быстрее находить соответствующую информацию о символе, т. к. быстрая документация теперь отображается при наведении курсора на этот символ, а не только при нажатии F1. Если в вашем коде есть проблема и WebStorm может помочь с ее решением, он также даст вам об этом знать, отобразив доступное быстрое исправление прямо во всплывающем окне с документацией.\n\ndocs-on-hover\n\nПри работе с JavaScript и TypeScript кодом быстрая документация покажет подробную информацию о типе и видимости символа, а также о том, где этот символ определен.\n\nts-quick-docs\n\nРежим Zen для сфокусированной работы\n\nНовый режим Zen поможет вам полностью сосредоточиться на своем коде. Сочетая в себе два режима, Distraction Free и Full Screen, он позволяет быстро включить их оба и на время изолировать то, что может отвлечь ваше внимание.\n\nzen-mode\n\nЧтобы попробовать новый режим, перейдите к View | Appearance | Enter Zen Mode из основного меню WebStorm или используйте всплывающее окно Switch (Ctrl+` | View mode | Enter Zen Mode).\n\nПоддержка Vuex и Vue Composition API\n\nVue.js набирает популярность, поэтому мы активно работаем над тем, чтобы сделать WebStorm самой полезной IDE для работы с этим фреймворком. На этот раз мы добавили два крупных улучшения.\n\nНачнем с того, что при работе с библиотекой Vuex вы увидите варианты автодополнения кода для символов Vue store и модулей при редактировании Vue-компонентов. WebStorm также поможет быстро перейти к определению геттеров, мутаций и действий.\n\nvuex-completion\n\nВо-вторых, поскольку уже можно использовать Composition API, доступный в грядущем релизе Vue 3, мы решили добавить его поддержку в WebStorm 2020.1.\n\nvue-composition-api-support\n\nЗапуск Prettier при сохранении файлов\n\nБлагодаря новой опции Run on save for files, вы можете применить форматирование Prettier ко всем файлам, указанным в настройках WebStorm и отредактированным в текущем проекте, при сохранении этих файлов — больше не нужно настраивать file watcher или пользоваться сторонним плагином.\n\nprettier-on-save\n\nПомощь с выявлением грамматических и стилистических ошибок\n\nНачиная с версии 2020.1 WebStorm поставляется в комплекте с Grazie, нашим инструментом для проверки орфографии, грамматики и стиля текста. Это поможет вам избежать грамматических ошибок при добавлении комментариев, коммитов и различных языковых конструкций.\n\ngrazie\n\nПо умолчанию Grazie включен только для английского языка и проверяет не все типы файлов на возможные грамматические ошибки. Вы можете добавить больше языков и изменить предустановленные настройки в Preferences/Settings | Editor | Proofreading (перейдите в раздел Grammar, если вы хотите настроить область проверок, посмотреть существующие правила и добавить исключения).\n\nНовые intention-действия и инспекции\n\nКак всегда, мы добавили несколько новых intention-действий и быстрых исправлений, чтобы помочь вам сэкономить время при работе с JavaScript и TypeScript кодом. Например, одно из новых intention-действий, доступное при нажатии на Alt+Enter, позволит быстро преобразовать существующий код в optional chaining и/или nullish coalescing.\n\nconvert-to-optional-chaining\n\nБольше информации о новых intention-действиях и быстрых исправлениях доступно в релизном блог-посте (на английском).\n\nПоддержка последних версий популярных технологий\n\nВ WebStorm 2020.1 вы найдете встроенную поддержку функциональности TypeScript 3.8, в том числе type-only imports/exports, private fields, и top-level await, которая поможет вам работать с ними более эффективно. Помимо этого, мы сделали работу с Angular 9 проектами проще, полностью поддержав новый формат метаданных.\n\nБолее удобное перебазирование коммитов\n\nДействие Interactively Rebase from Here, доступное на вкладке Logs окна Git, позволяет редактировать, объединять и удалять предыдущие коммиты. Это помогает сделать историю коммитов более линейной и понятной.\n\nrebasing-commits\n\nВ WebStorm 2020.1 вы найдете улучшенную, более интерактивную версию диалогового окна Rebasing Commits, которое открывается при вызове действия Interactively Rebase from Here. В обновленном диалоговом окне отображаются действия, которые можно применить к каждому коммиту. Он также показывает подробную информацию о каждом коммите и позволяет вам увидеть разницу и быстро сбросить примененные изменения.\n\nИспользование WebStorm для быстрого редактирования файлов\n\nБлагодаря новому режиму LightEdit, вы можете открывать файлы в отдельном окне текстового редактора, при этом не создавая и не загружая целый проект. Режим сработает, если WebStorm еще не запущен. Если WebStorm запущен, файл откроется в нем, как обычно.\n\nЧтобы попробовать новый режим в действии, нажмите правой кнопкой мыши на файл, который вы хотите отредактировать, и выберите WebStorm из списка предложенных программ. Как вариант, вы также можете настроить command-line launcher, как описано здесь, и открыть файл, пользуясь командной строкой.\n\nlightedit-mode\n\nНа этом всё на этот раз. Спасибо, что дочитали до конца! Еще больше подробностей вы найдете в релизном блог-посте (на английском). Вопросы, пожелания и просто мысли высказывайте в комментариях. Мы, как и всегда, будем рады ответить. Баг-репорты можно создать тут.\n\nКоманда JetBrains WebStorm\nThe Drive to Develop','2020-04-08 00:56:24','WebStorm 2020.1: улучшения в интерфейсе, поддержка Vuex и запуск Prettier при сохранении файлов',3,15),(49,'','NEW',NULL,'Читая этот материал, вы уже оставили свой след в цифровой вселенной. Информация о вашем нынешнем местонахождении или используемой операционной системе сохранилась в глобальном массиве больших данных и может быть использована как для благих целей, так и назойливыми рекламодателями или злоумышленниками.\n\nДавайте сразу оговоримся, оставаться полностью «незамеченным», совсем не оставляя цифровые следы, сегодня невозможно. Что бы вы ни делали, используя свой смартфон или ноутбук, ваши ходы постоянно записываются. Более того, источником важной информации могут быть не только априори «умные устройства» — «Яндекс-станция» или «умные часы», но и, например, «умный» холодильник, фитнес-трекер или проездной на метро. Количество ваших персональных цифровых следов растёт с каждым прожитым днём, формируя совокупно вашу «цифровую тень» — цифровой «портрет» вашей личности. Портрет, довольно близкий к оригиналу.\n\nБольшие данные\n\nВаша «цифровая тень» и цифровые следы являются источником и основной составляющей Больших данных (Big Data) – неотъемлемой части общества потребления в эпоху современных IT-технологий, социальных сетей и масс-медиа. Big Data – это совокупность технологий получения, хранения и обработки информации, как структурированной, так и не структурированной, в первую очередь, тех самых информационных следов. Коммерческое использование Больших данных началось около 10 лет назад и первыми, кто освоил применение этой технологии были, разумеется, технологические компании – Google, Яндекс, Yahoo, а затем и Facebook, Ebay, Amazon, вКонтакте и др. Умение обрабатывать цифровые следы позволило этим бизнесам выйти на новый уровень информированности о потребностях клиентов и покупателей, зачастую превосходящий даже возможности разведывательных служб.\n\nИсточниками информации для Big Data являются практически все действия человека в информационной среде. Это поисковые системы и системы аналитики (Google Analytics, Яндекс.Метрика), социальные сети, точки захвата контактных данных (сайты, мобильные приложения и т.п.), данные, хранящиеся в cash, интернет вещей (Internet-of-things, или данные, которыми обмениваются различные «умные» устройства) и многое другое.\n\nБольшие данные используются государственными органами, в исследованиях и стратегическом прогнозировании, бизнесом для построения верной стратегии продаж или рекламной кампании. Ваши цифровые следы и полученные на их основе Большие данные на выходе дают, например, такие бизнес-решения, как персонализация товарных предложений в сети, контента на сайтах или в приложениях и e-mailрассылок. По мере совершенствования эти технологии будут ещё шире применяться в таких сферах как, например, здравоохранение, транспортная инфраструктура и безопасность, сельское хозяйство и т.д.\n\n\n\nЦифровой след\n\nБольшие данные так же облегчают нашу жизнь в интернете и избавляют от мук потребительского выбора и части информационного шума. Однако, наш цифровой след используют не только для построения полезных алгоритмов в благих целях. Довольно легко получить доступ к вашей «цифровой тени» могут ваши недоброжелатели, конкуренты, злоумышленники или государственные структуры. Завладев таким образом сведениями, не доступными при обычном сборе информации, они в состоянии доставить вам большие неприятности. Однажды попав во всемирную сеть, ваши фото, комментарии и незашифрованная переписка останутся там навсегда, и заинтересованные лица найдут о вас любую нужную им информацию: где вы живете, где работаете и сколько зарабатываете, как проводите досуг, где любите отдыхать, какие товары покупаете, что любите пить и есть, какую музыку слушаете – практически всё, что угодно.\n\nВозьмём, к примеру, ситуацию с вашими транзакциями или платежами по банковским картам. Во-первых, многие банки отдают сервис смс-рассылок сторонним организациям, которые собирают данные о ваших доходах и суммах и статьях расходов. Во-вторых, в ходе проведения транзакций банк получает от торговой точки множество дополнительных данных по операции — дату, время, вид товара и др. И с помощью этих данных можно вычислить где вы живёте, какие магазины посещаете, где работаете, где живут ваши родственники, ваш график работы, карту перемещений и даже наличие у вас любовницы или хронических заболеваний. Допустим, утром вы совершили покупку в магазине у дома (график дня, покупательские предпочтения), заправили машину по пути на работу (карта передвижений), совершили транзакции на работе (место работы), после работы заехали в аптеку у дома за лекарствами и подгузниками (график работы, заболевания, наличие малолетнего ребёнка). Или вы можете тратить на покупки больше, чем поступает на карту по зарплатному проекту, что говорит о наличии у вас незадекларированного дохода и так далее.\n\nСогласитесь, исчерпывающая информация. Впоследствии эти данные часто утекают на сторону, передаются или продаются. И хорошо, если они попадают в руки маркетологов и рекламщиков, а не спецслужб, налоговой службы или мошенников.\n\nДругой пример — определение вашего круга общения на основе цифровых следов в соцсетях. Даже если вы не указываете, допустим, школу, в которой учились или место работы, заинтересованные люди всё равно могут вычислить ваши социальные связи через карту друзей (30% ваших друзей из школы №X, а 40% работают в «Банке Y», соответственно, по этой информации можно предположить, где вы учились и работаете) и, опять же, использовать эту информацию в своих корыстных целях.\n\nСетевая «гигиена»\n\nМожно ли уберечься от таких сценариев или хотя бы свести их вероятность к минимуму? Можно, но лишь отчасти. Принцип простой – чем меньше вы оставляете цифровых следов онлайн, и чем менее вы «интересны» для посторонних, тем в большей вы безопасности. Вот, что можно сделать, чтобы сохранить в неприкосновенности вашу идентичность:\n\nпри регистрации в социальных сетях, на сайтах и в приложениях использовать временные или специально созданные для этой цели номер телефона и адрес электронной почты;\nне раскрывать в открытых источниках e-mail, который вы используете при регистрации аккаунтов в социальных сетях;\nпо возможности делать закрытыми свои профили и списки друзей;\nпроводить очистку кэша браузеров;\nзапретить сохранение cookies (с их помощью можно проследить историю веб-сёрфинга);\nиспользовать разные браузеры для разных задач (для почты, для интернет-покупок и т.д.);\nиспользовать блокираторы рекламы (частично защищает от скрытых программ);\nпользоваться для личной переписки и обмена информации не социальными сетями, а мессенджерами с постоянным сквозным шифрованием;\nпользоваться службами электронной почты с надёжным шифрованием;\nпользоваться сервисом VPN или браузером со встроенным VPN для выхода в интернет;\nиспользовать для веб-сёрфинга анонимную сеть Tor;\nиспользовать антивирус (защищает не только от вирусов, но и от keylogger\'ов, которые позволяют получить «отпечатки» вводимых паролей и переписки и даже подключаться к веб-камере);\nпользоваться наличными деньгами вместо карт и минимизировать покупки в интернете.\n\nВсе эти способы полезны и сокращают вероятность несанкционированного использования ваших данных, но не гарантируют 100% результата. Единственный вариант избежать этого — избавится от компьютера и телефона и полностью исключить взаимодействие со всемирной сетью. Путь, согласитесь, радикальный, подходящий далеко не для всех.\n\nЗначительно логичнее использовать перечисленные правила сетевой «гигиены», но не стараться полностью избавиться от своей цифровой тени, а создавать её положительный образ и использовать себе во благо. Дело в том, что значительная часть современных работодателей, учебных заведений, конкурентов или просто ваших будущих партнёров в личной жизни, проводят так называемый репутационный анализ, прежде чем иметь с вами дело. Изучаются ваши социальные профили, комментарии, ваши активности, а работодатели просят указать ссылки на ваши аккаунты в социальных сетях.\n\nБолее того, государственные органы и спецслужбы давно и планомерно идут к тому, что можно условно назвать системой социальных профилей – это полномасштабное досье на каждого гражданина, созданное как раз на основе существующих баз данных и цифровых следов. Согласитесь, что в обоих случаях, полное отсутствие цифровой тени или её негативный характер не добавят вам плюсов.\n\nПоэтому, лучше всего постепенно и последовательно создавать в цифровой вселенной свой положительный образ. При любом действии в сети задумывайтесь о последствиях, действуйте анонимно там, где это подсказывает логика, подчёркивайте свои положительные качества, следите за репутацией. Исправить свой негативный образ в сети крайне не просто, значит создавать свой положительный сетевой образ, светлую «цифровую тень» лучше с самых первых шагов в мировой информационной сети.','2020-04-08 09:56:59','Береги тень смолоду',0,15),(52,'','ACCEPTED',2,'Привет, Хабр! Завтра, 8 апреля, состоится большая виртуальная конференция, на которой ведущие эксперты отрасли будут обсуждать вопросы защиты данных в реалиях современных киберугроз. Представители бизнеса поделятся методами борьбы с новыми опасностями, а сервис-провайдеры расскажут о том, почему сервисы киберзащиты помогают оптимизировать ресурсы и экономить деньги. Для желающих принять участие — подробное описание программы мероприятия, а также ссылка на бесплатную регистрацию под катом.\n\nimage\n\n\nВ наших прошлых постах мы уже говорили о том, почему традиционное резервное копирование умерло. Без дополнительной защиты от интеллектуальных угроз, без использования облачных технологий и эвристических алгоритмов резервные копии могут быть точно также повреждены вирусами и шифровальщиками, и это только одна из множества проблем современных компаний.\n\nМы подготовили виртуальную конференцию, которая состоится 8 апреля в 16.00 по московскому времени (2:00 BST). Двухчасовое мероприятие будет включать в себя две панельные дискуссии: «Почему устаревшие системы резервного копирования не могут противостоять современным киберугрозам», а также «Фреймворк для SMB и NIST: почему киберзащита нужна не только корпорациям».\n\nНа мероприятии будут выступать как представители Acronis, так и руководители компаний, выбравшие стратегию киберзащиты. В их числе:\n\nКристель Хейккила (Christelle Heikkila), ИТ-директор FC Arsenal,\nРичард Табб (Richard Tubb), эксперт по развитию ИТ-бизнеса,\nБертил Брендеке (Bertil Brendeke), вице-президент Acronis по направлению Cloud Europe,\nСтэпан Бинек (Stepán Bínek), менеджер облачных продуктов в Zebra,\nКандид Вуэст (Candid Wuest), вице-президент Acronis Cyber Protection Research,\nДжеймс Эр. Слэби (James R. Slaby), директор направления Cyber Protection в Acronis,\nУильям Деспард (William Despard), управляющий директор Teknov8 в Африке\nКлэр Сетчвелл (Clare Satchwell), руководитель по продуктам и маркетингу в Vuzion.\n\nПредставители бизнеса расскажут о тех угрозах и проблемах, с которыми они столкнулись в последние годы. В частности, Кристель Хейккила, ИТ-директор FC Arsenal, поделится опытом перехода от разрозненных систем защиты к единому решению. Руководители сервис-провайдеров расскажут о внедрении сервисов киберзащиты (киберзащита + гибридное резервное копирование) и объяснят, почему после перехода на новые технологии снизилась нагрузка на службу техподдержки, уменьшилось количество тикетов и выросла прибыль.\n\nТакже в ходе нашей конференции будет проведена первая публичная демонстрация Acronis Cyber Protection Cloud в Европе. Новое решение представляет собой интегрированную систему с функциями ИИ. Облачный сервис сочетает в себе современные технологии резервного копирования, защиты от вредоносного ПО и управления безопасностью, включая оценку уязвимостей, контроль доставки патчей, фильтрацию URL и так далее. Ронан МакКёртен (Ronan McCurtin), вице-президент Acronis в Северной Европе и Николай Чуркин, инженер по решениям Acronis расскажут обо всех особенностях системы, ее преимуществах для бизнеса и сервис-провайдеров. Акцент будет сделан на уникальных возможностях и кейсах, которые раньше были невозможны в рамках единого сервиса или продукта.\n\nПрисоединяйтесь к нашему мероприятию. Обилие информации и наличие практического опыта гарантировано! А чтобы вам было не только интересно, но и приятно, среди участников будут разыграны призы от FC Arsenal!','2020-04-08 09:58:01','Большая виртуальная конференция: Реальный опыт по защите данных от современных цифровых компаний',1,15),(55,'','ACCEPTED',2,'Материал статьи взят с моего дзен-канала.\n\n\nОбнаружитель тонального сигнала\n\nВ прошлой статье мы создали измеритель уровня сигнала. В этой мы научимся обнаруживать тональный сигнал.\n\n\nИмитатор пульта управления и приемника\n\n\nВ старые времена, когда не в каждой семье был телевизор, и у половины из них каналы переключались с помощью пассатижей, в обзорах иностранной технической прессы появилась интригующая новость, что один и производителей телевизоров снабдил свои аппараты пультом дистанционного беспроводного управления. Из подробностей было известно, что пульт работает без батареек благодаря использованию необычного подхода — пульт был механический и представлял из себя гибрид музыкального инструмента — металлофона и револьвера. В барабане револьвера находились металлические цилиндры, разные по длине, и когда боёк ударял по одному из них, цилиндр начинал звенеть на своей собственной частоте. Предположительно на ультразвуке. Электроника в телевизоре слышала этот сигнал и определив его частоту выполняла соответствующее действие — переключить канал, изменить громкость, выключить телевизор.\n\n\nСегодня мы попробуем сделать реконструкцию этой системы передачи команд, воспользовавшись нашими знаниями медиастримера.\n\n\nДля имитации пульта, воспользуемся текстом нашего примера тонального генератора. Мы добавим в него управление частотой генератора от нажатий с клавиатуры и приемник с декодером, который будет выводить в консоль принятые команды. После изменения, генератор должен выдавать тональные сигналы 6 частот, которыми мы будем кодировать команды увеличения/уменьшения громкости, смены канала, включения/выключения телевизора. Для настройки детектора используется структура:\n\n\nstruct _MSToneDetectorDef{  \n     char tone_name[8];     \n     int frequency; /**<Expected frequency of the tone*/ \n     int min_duration; /**<Min duration of the tone in milliseconds */ \n     float min_amplitude; /**<Minimum amplitude of the tone, 1.0 corresponding to the normalized 0dbm level */\n};\n\ntypedef struct _MSToneDetectorDef MSToneDetectorDef;\n\nДетектору можно передать 10 таких структур, тем самым один детектор можно настроить на обнаружение десяти двутональных сигналов. Но мы с вами будем использовать всего шесть однотональных сигналов. Для передачи настроек детектору используется метод MS_TONE_DETECTOR_ADD_SCAN.\n\n\nЧтобы детектор мог известить нас о том, что на его вход поступил сигнал с искомыми частотными составляющими, мы должны ему предоставить функцию обратного вызова, которую он запустит по такому случаю. Это делается с помощью функции ms_filter_set_notify_callback(). В качестве аргументов она получает указатель на фильтр, указатель на функцию обратного вызова, указатель на данные, которые бы мы хотели передать функции обратного вызова (данные пользователя).\n\n\nПри срабатывании детектора функция обратного вызова получит данные пользователя, указатель на фильтр детектора, идентификатор события, и структуру описывающую событие:\n\n\n\n/** * Structure carried as argument of the MS_TONE_DETECTOR_EVENT**/\nstruct _MSToneDetectorEvent{ \n      char tone_name[8];       /* Имя тона которое мы ему назначили при настройке детектора. */\n      uint64_t tone_start_time;   /* Время в миллисекундах, когда тон был обнаружен. */\n};\n\ntypedef struct _MSToneDetectorEvent MSToneDetectorEvent;\n\nСтруктурная схема обработки сигнала показана в заглавной картинке.\n\n\nНу а теперь сам код программы с комментариями.\n\n\n/* Файл mstest4.c Имитатор пульта управления и приемника. */\n#include <mediastreamer2/msfilter.h>\n#include <mediastreamer2/msticker.h>\n#include <mediastreamer2/dtmfgen.h>\n#include <mediastreamer2/mssndcard.h>\n#include <mediastreamer2/msvolume.h>\n#include <mediastreamer2/mstonedetector.h>\n\n/* Подключаем заголовочный файл с функциями управления событиями\n * медиастримера. */\n#include <mediastreamer2/mseventqueue.h>\n\n/* Функция обратного вызова, она будет вызвана фильтром, как только он\n * обнаружит совпадение характеристик входного сигнала с заданными. */\nstatic void tone_detected_cb(void *data, MSFilter *f, unsigned int event_id,\n        MSToneDetectorEvent *ev)\n{\n    printf(\"                      Принята команда: %s\\n\", ev->tone_name);\n}\n\nint main()\n{\n    ms_init();\n\n    /* Создаем экземпляры фильтров. */\n    MSFilter  *voidsource = ms_filter_new(MS_VOID_SOURCE_ID);\n    MSFilter  *dtmfgen = ms_filter_new(MS_DTMF_GEN_ID);\n    MSFilter  *volume = ms_filter_new(MS_VOLUME_ID);\n    MSSndCard *card_playback =\n        ms_snd_card_manager_get_default_card(ms_snd_card_manager_get());\n    MSFilter  *snd_card_write = ms_snd_card_create_writer(card_playback);\n    MSFilter  *detector = ms_filter_new(MS_TONE_DETECTOR_ID);\n\n    /* Очищаем массив находящийся внутри детектора тонов, он описывает\n     * особые приметы разыскиваемых сигналов.*/\n    ms_filter_call_method(detector, MS_TONE_DETECTOR_CLEAR_SCANS, 0);\n\n    /* Создаем источник тактов - тикер. */\n    MSTicker *ticker=ms_ticker_new();\n\n    /* Соединяем фильтры в цепочку. */\n    ms_filter_link(voidsource, 0, dtmfgen, 0);\n    ms_filter_link(dtmfgen, 0, volume, 0);\n    ms_filter_link(volume, 0, detector, 0);\n    ms_filter_link(detector, 0, snd_card_write, 0);\n\n    /* Подключаем к фильтру функцию обратного вызова. */\n    ms_filter_set_notify_callback(detector,\n            (MSFilterNotifyFunc)tone_detected_cb, NULL);\n\n    /* Подключаем источник тактов. */\n    ms_ticker_attach(ticker,voidsource);\n\n    /* Создаем массив, каждый элемент которого описывает характеристику\n     * одного из тонов, который требуется обнаруживать: Текстовое имя\n     * данного элемента, частота в герцах, длительность в миллисекундах,\n     * минимальный уровень относительно 0,775В. */  \n    MSToneDetectorDef  scan[6]=\n    {\n        {\"V+\",  440, 100, 0.1}, /* Команда \"Увеличить громкость\". */\n        {\"V-\",  540, 100, 0.1}, /* Команда \"Уменьшить громкость\". */\n        {\"C+\",  640, 100, 0.1}, /* Команда \"Увеличить номер канала\". */\n        {\"C-\",  740, 100, 0.1}, /* Команда \"Уменьшить номер канала\". */\n        {\"ON\",  840, 100, 0.1}, /* Команда \"Включить телевизор\". */\n        {\"OFF\", 940, 100, 0.1}  /* Команда \"Выключить телевизор\". */\n    };\n\n    /* Передаем в детектор тонов приметы сигналов. */\n    int i;\n    for (i = 0; i < 6; i++)\n    {\n        ms_filter_call_method(detector, MS_TONE_DETECTOR_ADD_SCAN,\n                &scan[i]);\n    }\n\n    /* Настраиваем структуру, управляющую выходным сигналом генератора.*/\n    MSDtmfGenCustomTone dtmf_cfg;\n    dtmf_cfg.tone_name[0] = 0;\n    dtmf_cfg.duration = 1000;\n    dtmf_cfg.frequencies[0] = 440;\n    /* Будем генерировать один тон, частоту второго тона установим в 0.*/\n    dtmf_cfg.frequencies[1] = 0;\n    dtmf_cfg.amplitude = 1.0;\n    dtmf_cfg.interval = 0.;\n    dtmf_cfg.repeat_count = 0.;\n\n    /* Организуем цикл сканирования нажатых клавиш. Ввод нуля завершает\n     * цикл и работу программы. */\n    char key=\'9\';\n    printf(\"Нажмите клавишу команды, затем ввод.\\n\"\n        \"Для завершения программы введите 0.\\n\");\n    while(key != \'0\')\n    {\n        key = getchar();\n        if ((key >= 49) && (key <= 54))\n        {\n                printf(\"Отправлена команда: %c\\n\", key);\n            /* Устанавливаем частоту генератора в соответствии с\n             * кодом нажатой клавиши.*/\n            dtmf_cfg.frequencies[0] = 440 + 100*(key-49);\n\n            /* Включаем звуковой генератор c обновленной частотой. */\n            ms_filter_call_method(dtmfgen, MS_DTMF_GEN_PLAY_CUSTOM,\n                    (void*)&dtmf_cfg);\n        }\n        ms_usleep(20000);\n    }\n}\n\nКомпилируем и запускаем программу. Если все работает правильно, то после запуска мы должны получить примерно такое поведение программы:\n\n\n$ ./mstest4\nALSA lib conf.c:4738:(snd_config_expand) Unknown parameters 0\nALSA lib control.c:954:(snd_ctl_open_noupdate) Invalid CTL default:0\nortp-warning-Could not attach mixer to card: Invalid argument\nALSA lib conf.c:4738:(snd_config_expand) Unknown parameters 0\nALSA lib pcm.c:2266:(snd_pcm_open_noupdate) Unknown PCM default:0\nALSA lib conf.c:4738:(snd_config_expand) Unknown parameters 0\nALSA lib pcm.c:2266:(snd_pcm_open_noupdate) Unknown PCM default:0\nortp-warning-Strange, sound card Intel 82801AA-ICH does not seems to be capable of anything, retrying with plughw...\nНажмите клавишу команды, затем ввод.\nДля завершения программы введите 0.\nortp-warning-alsa_set_params: periodsize:256 Using 256\nortp-warning-alsa_set_params: period:8 Using 8\n\nНажимаем любые клавиши от \"1\" до \"6\", подтверждая клавишей \"Enter\", должен получаться примерно такой листинг:\n\n\n\n2\nОтправлена команда: 2\n                      Принята команда: V-\n1\nОтправлена команда: 1\n                      Принята команда: V+\n3\nОтправлена команда: 3\n                      Принята команда: C+\n4\nОтправлена команда: 4\n                      Принята команда: C-\n0\n$\n\nМы видим, что тоны команд успешно отправляются и детектор их обнаруживает.\n\n\nВ следующей статье мы обратимся к передаче звукового сигнала по сети Ethernet с помощью RTP-протокола и тут же применим его в нашем дистанционном пульте.','2020-02-08 09:58:34','Изучаем VoIP-движок Mediastreamer2. Часть 5',2,15),(58,'','ACCEPTED',2,'Утром, не сделав и глотка кофе, открываешь почту и видишь баг репорты по тому, что вполне себе нормально работало, не сбоило и особо не беспокоило. Идей с ходу ноль, подозреваемых нет, больших изменений в коде тоже не было — нужно лезть в логи.\n\nА туда ты не ходил так давно, что раздало файл с логами аж до 100 мб. или до 500 мб. Черт! А может и до 10 Гб (*). И лежат драгоценные улики где-то там среди 10 737 418 240 байтов, что надо срочно пробежать, дабы выяснить, что ж вообще происходит, меж тем как кофе уже остывает.\n\nА может к рапорту прицепом шёл и архив с двумя сотнями файлами (скажем по 5 Мб каждый) разбитых логов и надо их как-то клеить, а потом смотреть, копать и думать.\n\nЗнакомо?\n\nВ общем все мы так или иначе сталкиваемся с необходимостью анализа «следов жизнедеятельности» наших творений и хорошо если файл весит пару Мб, потому как открыть лог в 1 Гб блокнотом, да ещё и попытаться поиск сделать — занятие весьма сомнительное.\n\nПод катом поведаю об одном инструменте, не имеющим лимитов (**) по размерности открываемых файлов, зато обладающим весьма шустрым поиском.\n\nА ещё приглашу к разработке присоединиться.\n\nИ да, будет много интересных картинок.\n\nИтак, казалось бы тривиальная задача, открыть логи и поискать, может порой упереться в банальный размер файла. Мелочь то можно открыть чем угодно, да хоть бы тем же блокнотом или notepad++, а на маках и линуксах, так вообще порой проще бросить cat`ом все в консоль и сделать поиск.\n\nКроме всего прочего можно использовать упомянутый notepad++, atom, logExpert, sublime, bare vim, bbedit, glogg и etc. Скажу сразу, гигабайта 2 откроют не все, а некоторые из выживших увы сломаются на поиске. Да и из всех выше приведённых, пожалуй лишь atom во истину кроссплатформенный, а так хочется иметь что-то одно, когда вынужден работать на нескольких платформах параллельно. А уж сколько некоторые съедят RAM для обработки хотя бы пары сотен мегабайт логов — это отдельная история.\n\nВот собственно поэтому имеем тулзу chipmunk, запиленную было под узкие задачи, но быстро выросшую в комплексное решение по анализу логов. Ничего другого chipmunk не умеет, его задачи сводятся к простому:\n\nоткрывать логи, не парясь над размером файла;\nискать так, что б не ждать, а видеть результат сразу;\nпомнить все ваши поиски и бережно хранить их до востребования;\nпомогать вам визуально воспринимать информацию;\nвести себя скромно по отношению к RAM;\nрешать и иные более узкие задачи, но всегда сводящиеся к анализу логов.\n\nНу давайте обо всем по порядку.\n\nРесурсы\n\nChipmunk ничего не грузит в оперативную память, кроме того куска логов, что виден на экране (ну ещё немного буферизации, но это мелочь). Гуляя по файлу, chipmunk, читает кусок файла (соответствующий позиции скролинга) и только лишь его и подгружает в память. Благодаря этому аппетиты по отношению к RAM вполне вразумительные и не колеблются, а первый «экран» с содержанием файла показывается немедленно (хотя фоном индексация будет продолжаться).\n\nУдобство и визуализация\n\nimage\n\nИмеется менеджер поисковых запросов, где можно:\n\nназначить цвета фильтрам (что облегчает восприятие данных)\nсохранить коллекцию фильтров в файл, дабы всегда иметь под рукой готовый паттерн поиска.\n\nМожно, например, посмотреть по файлу чистоту совпадений (чем выше столбик, тем больше совпадений во фрагменте файла).\n\nimage\n\nА можно указать группу в регулярном выражении и получить красивый график (в приведённом примере используется выражение CPU usage:\\s+(\\d+\\.\\d+)). И теперь вы видите, где потребление CPU было аномальным и какой кусок логов следует изучить внимательнее.\n\nimage\n\nКроме поиска самого по себе, отдельные строки логов можно кидать в закладки, которые всегда будут представлены в окне результатов поиска. Это весьма удобно, когда увидел что-то важное среди пары миллионов строк и не хочешь терять это из виду.\n\nКомбинирование файлов\n\nДля решения задач, связанных с несколькими файлами chipmunk может слепить файлы в один (например по дате последнего изменения в файле). Все что нужно:\n\nкинуть группу файлов в окно chipmunk\nесли нужно отсортировать файлы, как душе угодно\nв дополнение можно сделать поиск по всем файлам и, например, исключить те файлы, что не имеют совпадений по слову «error» (ну а зачем нам лезть туда, где итак все спокойно?)\n\nimage\n\nКак результат мы получим в окне последовательность из всех выбранных файлов.\n\nЕсли же требуется более сложный механизм комбинирования логов (например, если у вас имеются логи с разных девайсов/источников), то можно воспользоваться функцией merge, которая определить формат метки времени для каждого файла и выведет логи в хронологическом порядке.\n\nimage\n\nОбратите внимание на цветовые метки слева от вывода — это метки файлов. То есть вы видите не вывод одного файла за другим (concatenation), а отсортированный по времени вывод из всех файлов (merging).\n\nОсобые штучки\n\nЕсли вы когда-либо сталкивались с DLT, то вы знаете, какая это боль использовать DLTViewer. Хорошая новость в том, что chipmunk представляет собой альтернативу для открытия и анализа DLT файлов. Кроме того он поддерживает и подключение DLT потоку.\n\nimage\n\nПри открытии же DLT файла вы сразу увидите сводку по файлу, включающую перечень всех компонентов, что удобно если вас интересует какое-то конкретное APID, а не весь лог целиком.\n\nКстати, о потоках\n\nИз коробки с chipmunk идёт простенький плагин «Commands», который позволят запустить любую консольную команду и получать вывод в chipmunk с возможностью поиска по этому выводу. Естественно, если у вас есть активный поиск (например, сохранённый фильтр), то данные результатов будут обновляться по мере обновления потока от вашей консольной команды.\n\nimage\n\nАх, да, плагины\n\nИх, пока, мало. Вот прямо правда мало. Публичных всего 5 (тех что в открытом доступе и доступны для менеджера плагинов), не публичных, я даже не знаю, может пара десятков.\n\nНаписать свой плагин очень просто (оговорюсь, для простой задачи просто).\n\nНапример, если в ваших логах встречаются сообщения представленные в виде байтов, а вам хотелось бы их видеть сразу в читаемом виде (то есть декодированными); можно легко запилить плагин, который будет как ввод получать выделенный пользователем фрагмент логов, а декодированный вывод кидать в панель. А может и вообще на лету декодировать и на экран выводить уже вразумительный текст, а не A5 FF 13 EE … etc.\n\nВ целом есть два типа расширений: первые работают с рендером, то есть позволяют изменять представление вывода: хотите столбики — пожалуйста; хочется что-то на лету декодировать — можно; есть желание воткнуть графику (например иконки) — не ясно зачем оно вам, но можно.\n\nДругой тип плагинов (и он более интересен), те что могут поставлять данные (создавать потоки). Например, хотите видеть вывод с serial-порта? Не проблема: делам новый npm проект, включаем в него любимую либу по работе с портами, добавляем немного UI по вкусу и вот уже ваш плагин может кидать данные в chipmunk.\n\nДля удобства и первых свиданий, как водится в приличных семьях, имеется quickstart репозиторий с парой тройкой примеров.\n\nЕсли заинтересует, дайте знать в коментах — я сделаю отдельный пост-гайд по созданию и публикации плагинов (кстати для публикации никакой регистрации не требуется).\n\nВместо заключения\n\nВот, пожалуй, и все. Я не хочу делать из этого поста ни рекламного буклета, ни манула для пользователей — поэтому так кратко с минимумом букв. Моя цель — поделиться с вами ещё одним инструментом по работе с логами, который может оказаться годным подспорьем для решения многих задач.\n\nПроект полностью опенсоурсный и открыт для вашего участия, любого вашего участия. Хотите увидеть поддержку чего-то этакого? Создавайте issue и выбирайте «Feature request». Нашли баг? Будем счастливы увидеть от вас bug-report с кратким (но достаточным) описанием проблемы. Английский язык приветствуется, но русский не возбраняется.\n\nНу и конечно, поставив заветную звёздочку на github, вы уже через несколько секунд почувствуете лёгкое тепло и улучшение настроения от нашей благодарности за одобрение того, что мы делаем. Для вас клик — для нас обратная связь и воодушевление.\n\nСпасибо.\n\nРелизы\nДругие ссылки\nУточнение','2020-04-08 09:59:36','Безумные логи',7,15),(61,'','ACCEPTED',2,'Еще 16 марта мы сидели в уютном оупенспейсе, а уже на следующий день весь офис переехал на удаленку, домой. На хабре достаточно подобных историй. Но специфика нашей ситуации заключается не в переводе сотрудников, а переводе клиентов. Это более трех тысяч студентов, которые пришли учиться на дневном, но в одначасье оказались на заочном.\n\nЧто было сделано\n\nУчебным отделом для преподавателей были разработаны методические рекомендации по ведению лекций online. Например, такие как:\n\nДлительность занятий\nФокусировка внимания\nОгромная работа легла на сотрудников первой и второй линии поддержки. В одночасье на поддержке оказались тысячи личных устройств пользователей, на которых надо помочь установить необходимый софт, выдать лицензии на специфическое ПО и еще, внезапно, Zoom не работает в Крыму (кто успел туда уехать), Опера c встроенным VPN`ом помогают.\n\nВ качестве основной платформы был выбран Zoom.\n\nИзначально остро встал вопрос с планированием занятий, созданием конференций и информированием всех студентов и проеподавателей.\n\nimage\n\nВот так выглядело расписание Zoom лекций первые несколько дней. В котором все конференции создавались вручную\n\nimage\n\nА так, когда оно снова стало вестись в 1с\n\nСпасибо моему коллеге, что он оперативно раскурил API Zoom`а и прикрутил автоматическое создание конференции в соответствии с расписанием. А так же автоинформирование об этом.\n\nА тут ссылка на труды Сергея, как с помощью Zoom API можно создавать конференции.\n\nЯ в свою очередь хочу поделиться опытом по интергации платформы в Android приложение.\nВ нашем юзер-кейсе это оказалось очень удобно, т.к. конференции создаются на сервере и их идентификаторы передаются в расписание на телефоне.\n\nimage\n\nИнтерфейс расписания интегрированного с Zoom\n\nТеперь посмотрим как это работает.\nИсходный код\n\n1. Импортируем две библиотеки из SDK: commonlib и mobilertc. Это, наверно, самый печальный этап, т.к. ваше приложение становится тяжелее на 80 мегабайт.\n\n2. Имплементируем InitAuthSDKCallback, MeetingServiceListener в нашу активити или фрагмент. Для работы зума нужен минимальный API 21 (В документации на сайте указан minSdkVersion 16, но ее не очень оперативно обновляют, лучше ориентироваться на примеры в семплах идущих с SDK).\n\nПри создании фрагмента инициализируем SDK\n\nИнициализация Zoom SDK\nДля этого созаем класс InitAuthSDKHelper и вызываем функцию:\n\ninitSDK\nТут обратим внимание на следующие параметры:\n\nappKey и appSecret — это идентификатор и секретный ключ вашего приложения, которое вы создаете на сайте зума (занимает примерно 1 минуту), зарегитрировавшись как разработчик.\n\nНа практике настоятельно не рекомендуется использовать их для идентификации.\nВместо них следует использовать параметр jwtToken, как это сделать написано тут.\n\nПодключение к конференции\nimage\n\nВ данной реализации используется родной интерфейс. Но поддерживается возможность его кастомизации.\n\nВыводы\n\nПроцесс обучения (за исключением тех случаев, когда требуются мастерские и спец. оборудование) можно перевести в online.\nВажен целенаправленный и систематический подход, чтобы исключить зоопарк инструментов коммуникации, которые каждый тьютор будет использовать.\nЕсли у вас на бэкенде учебный процесс был до этого налажен, то внедрение конференций в мобильное приложение не займет много времени.','2020-04-08 10:00:43','Переводим студентов на удаленку за 1 день',2,15),(66,'','DECLINED',2,'Помните статью «Я бесполезный дурак и хочу уволиться»? Переполненная болью и разъедающей рефлексией исповедь выгоревшего разраба. Статья получилось не на ровном месте, у нее есть предыстория.\n\nМы с Филом fillpackart, ее автором, пришли писать на Хабр два года назад. Я получил место штатного редактора, он был моим техническим экспертом для интервью с разработчиками. Я тогда представления не имел, как брать интервью, тем более на темы, в которых не секу вообще ничего. Поэтому тренировался на нем. Он никогда не стеснялся выражений. Я задолбался слушать почему фронтендеры гробят индустрию, почему он с пхп-шником за один стол не сядет, а 1с-ник вообще не человек.\n\nУ Фила был не самый легкий период в жизни — выгорание, годовалый ребенок, метания между работами. Тот же самый полу ироничный гнев он лил и на себя тоже. Во время одной особо мощной беседы мы решили, что тренировочное интервью станет настоящим.\n\nОтклик был сумасшедшим, народ офигел, что в индустрии, где публично все привыкли быть паиньками и хорошими парнями, у кого-то есть яйца говорить такие вещи вслух.\n\nЗа два года мы написали еще полтора десятка статей, и ни одна не была проходной. Переводы на английский разрывали реддит в клочья, а когда текст ретвитнул создатель F# Дон Сайм — мы открывали шампанское.\n\nНо полтора десятка — это очень мало, особенно по сравнению с количеством идей и черновиков, которые ушли в стол. И еще меньше по сравнению с гуглеардами часов разговоров, в которых эти идеи ковались.\n\nТеперь разговоры не пройдут зря, потому что мы с Филом запускаем подкаст. Первый выпуск здесь. В пилоте мы скромные, не материмся, не курим и не пьем, не срываемся в споры и не поливаем всех помоями. Но вряд ли это продержится долго.\n\n\n\n\nА вот вкратце о чем он:\n\nУдаленка во время кризиса\n\n0:40 — Что происходит на рынке вакансий в кризис\n3:50 — Вынужденная удаленка.\n5:51 — Не пострадает ли от экстренной удаленки секьюрность\n7:45 — Что будет с удаленкой, когда кончится карантин\n8:40 — Почему не все компании любят удаленку и почему они не правы\n11:03 — или все-так правы\n12:16 — На удаленке друзья могут быть полезнее, чем коллеги\n13:19 — Ошибка выжившего у менеджеров, которые организуют удаленку\n18:04 — Можно ли заставить человека работать, если он не хочет\n20:13 — Что если разработчики будут работать без менеджеров\n\nСтранности образования в ИТ\n\n21:40 — О профильном высшем образовании для программистов\n23:03 — Почему опытные разработчики не любят выпускников курсов\n24:18 — Кто лучше готовит к индустрии — курсы или вузы\n25:38 — Учеба Фила в университете на программиста\n26:39 — Как корпорации заменяют высшее образование\n28:53 — Могут ли корпорации заменить общее развитие, которое дает вуз\n\nСмерть оригинальности\n\n31:39 — Технические журналисты перестают писать как люди\n32:43 — Странные традиции написания кода в C#\n34:14 — Проблемы общепринятых подходов в разработке\n36:20 — Есть ли свой почерк у разных программистов\n37:35 — Кому и для чего нужны разработчики с уникальным видением\n38:54 — О чем тебя спрашивают на собеседованиях и что потом требуют на работе\n40:27 — Зачем бизнес ищет людей с видением но дает им тривиальные задачи\n41:07 — Как появляются вещи, на которые все согласны, но которые никому не нравятся\n45:51 — Фейковые трейлеры фейковых игр и этический эксперимент','2020-01-08 10:02:00','Мы обречены #1// Удаленка в кризис и смерть оригинальности',0,15),(69,'','ACCEPTED',2,'Хабр, привет!\n\nСкорее всего вы не знаете, но мы раз в месяц встречаемся с нашими выпускниками и преподавателями в московском баре за пивом\\ чаем. И вот в условиях новой реальности, new normal, мы вынуждены приводить наши традиции в соответствие с действительностью. В онлайн-формат с программами ушли еще в середине марта, а на прошлой неделе впервые устраивали онлайн-встречу сообщества Newprolab и остались настолько довольны новым опытом, что решили немного написать о том, что обсуждалось, а также выложить в наш канал на Youtube запись встречи (для удобства перемещения по видео проставили таймкоды). Мы смогли пообщаться с нашими выпускниками из Израиля, Сингапура, преподавателем, переехавшим в Шотландию. Приятно было видеть всех с кружками и бокалами, как и на обычной встрече в баре. А еще это была первая встреча, на которую выпускники пришли с детьми, а я — с собакой :)\n\nimage\n\nОбычные наши встречи проходят без какой бы то ни было повестки, но в этот раз решили сделать встречу тематической, попросили выпускников поделиться тем, что сейчас происходит в их компаниях\\ командах, с процессами, продуктами, как они меняются в новых обстоятельствах и пр. Но по факту затрагивали и другие темы как на обычной вечеринке.\n\nМы точечно приглашали некоторых выпускников и преподавателей поделиться своими ситуациями\\ новостями, но они не смогли присоединиться по ряду причин:\n\n«по уши в работе, удаленный формат не продуктивен, поэтому я работаю сейчас по 12 часов в среднем, не смогу быть. Удаленный формат совершенно неудобен для менеджеров»;\n«боюсь, сейчас немного не до того нам. слишком турбулентно. и пока насчет сценариев не очень понятно все равно. а про вызовы вот только-только стало понятно какие, но как справляться — тоже непонятно. мне кажется, рановато вы, такие вопросы интереснее через месяцок обсуждать, когда у всех картинка сформируется, ну, или через 2-3 недели хотя бы»;\n«работаем по текущему плану, смотрим, что происходит на рынке, кто перестает покупать, кто начинает. обновляем планы и ждем, когда закончится карантин»;\n«я бы с радостью, но я как раз с этими проблемами справляюсь и не успеваю завтра на встречу».\n\nВ данном материале собрали некоторые, надеемся, полезные для вас темы, которые обсуждали. Иногда они будут описаны очень коротко, но вы всегда сможете посмотреть нужный отрывок в записи встречи, просто кликнув на нужную тему в описании к видео.\n\nПо словам Никиты Матвеева, CDO S7, в компании сильно возросла потребность в BI-отчетности, разные департаменты, некогда не испытывающие потребности в real-time отчетах, сейчас их требуют. Плюс от ситуации заключается в том, что в некоторых подразделениях бизнес-процессы остановились или сильно снизили свою интенсивность и теперь, наконец, с ними можно реализовывать давно задуманные проекты – как пример Никита приводит перераспределение экипажей.\n\nЗатем завязалась беседа про различия data science product owner и обычного product owner, и про продуктовые команды в data science. Егор Матешук, компания Квант, говорил о сложности определения метрик для таких команд, поскольку зачастую они делают не конечный продукт, а только его часть. И поэтому для них гораздо сложнее формулировать результирующие метрики. Описание чисто результатов модели не является оптимальным, т.к. они могут быть не привязаны к показателям бизнеса.\n\nЕгор далее рассказывал про положение дел у них в Квант: у них тоже обострилось внимание к отчетности, больше внимания теперь к источникам и мониторингу. Одна из выявленных сейчас болей – неадаптивный мониторинг. Количество метрик, за которыми следит компания, много, обычно они ведут себя спокойно, а сейчас из-за уменьшения активности идет череда колеблющихся алёртов (ранее установленные метрики сейчас не актуальны). Вторым вызовом Егор назвал коммуникацию. Лучше работают автономные продуктовые команды, а там, где функциональность разбита между департаментами, сложности начинаются как раз на стыках отделов – но такая проблема есть и “в обычной неудаленной жизни”.\n\nЕще Егор попросил поделиться, как в других компаниях воспринимается бизнесом создание ml-платформы для тестирования моделей и как эта идея ими продается. Никита Учителев как раз занимается разработкой такой платформы в Lamoda, и он рассказал, как у них выстраивается общение с бизнесом по этому и не только этому вопросу. Саша Петров рассказал про платформу SageMaker, которую они используют в Amazon, и которой могут пользоваться другие компании тоже.\n\nСаша затем рассказал про горизонтальную оргструктуру в Amazon, где продуктовые команды – как бы самостоятельные стартапы, распределенные по всему миру и зачастую имеющие дублирующие разработки. Поскольку в компании всегда было много видео-общения с офисами и в Сиэтле, и Пало-Альто, и в Индии, то формат привычен, разница в том, что со своей основной командой теперь они встречаются не в переговорке, а также онлайн.\n\nБорис Сюсюкалов, Делимобиль, поделился практикой работы их аналитической команды в удаленном формате. Если общение в онлайне затруднено, надо его минимизировать. Под этим подразумевается наличие созданной экосистемы, к которой могут обращаться аналитики и дата инженеры в асинхронном режиме – jira, task tracker. Еще компания сейчас сделала видимым весь процесс преобразования данных, чтобы аналитик мог отслеживать, что происходит с данными, с которыми он работает, это дает автономность работы сотрудника и повышает его работоспособность.\n\nАндрей Малов, проживающий в Израиле, рассказал о трех неделях на карантине в неоплачиваемом отпуске, системе поддержки государства. Рассказал о невозможности для Израиля работать удаленно из дома из-за количества детей в семье – их в среднем 3,5 на семью.\n\nДмитрий Гармашев рассказал о том, что уже некоторое время назад нанимать удаленных сотрудников стало проще, нет необходимости приезжать в офис и подписывать трудовой договор, совершенно нормально делать это в скане по почте. Для компаний, работающих удаленно, и имеющих удаленных сотрудников, не сильно что меняется с введенным карантином.\n\nНикита Учителев поделился лайфхаком – в некоторые модели, которые связаны с временными процессами (динамика продаж, например), они добавили бинарную фичу про период пандемии. Саша задал справедливый вопрос, не переобучится ли модель на одном периоде, Никита ответил, что через несколько недель можно будет сделать вывод, не сказалось ли это на качестве.\n\nЛена Лукьянова, сотрудница Sanger Institute (Cambridge University) рассказывала про некоторые открытия, сделанные за период самоизоляции: дорога на работу и спорт сильно влияют на ее креативность. В команде, где важны не только хард скиллы, но и софт – всячески поддерживается теплая дружественная атмосфера, удаленный формат не дает возможность поддерживать такую связь между коллегами. Даже онлайн beer hour, на котором сознательно не обсуждается работа, не заменяет нормального общения за ланчем и кофе. Cambridge University понимает важность mental health своих сотрудников, поддерживает их не только сейчас, в период изоляции, но и в любое другое время, предоставляя возможность работать с коучами не только из этого Университета, но и других. Саша Петров подтвердил, что Amazon тоже очень запаривается по поводу well-being сотрудников, рассказал о программе Mentorship и разных клубах по интересам для сотрудников.\n\nАлёна Мельникова поделилась ситуацией в Сингапуре, рассказала о том, что у них в Refinitiv идет плотная работа с клиентами, разрабатываются новые продукты, работа кипит. Подтвердила, что переход на удаленку в продуктовой команде, про которую говорил Егор, действительно не сильно сказывается на работе, все дедлайны соблюдаются, работа выполняется.\n\nВлад Бояджи из Сбербанка делился наболевшим: сложностями собеседований по skype. Надо нанять несколько человек, часть из них он прособеседовал лично еще до карантина, а часть уже находясь в карантине. И вот не получается создать полноценное впечатление о человеке, не видя его вживую. Из веселого – кто-то прям по ходу интервью, пользуясь компом под рукой, начинает г','2020-04-08 10:03:18','Возросший спрос на аналитику, продуктовые команды, Amazon',3,15),(71,'','ACCEPTED',2,'Привет, Хабр!\n\nВ данной статье мы бы хотели поговорить про автоматизацию сетевой инфраструктуры. Будет представлена рабочая схема сети, которая функционирует в одной маленькой, но очень гордой компании. Все совпадения с реальным сетевым оборудованием являются случайными. Мы рассмотрим кейс, произошедший в данной сети, которой мог привести к остановке бизнеса на продолжительное время и серьезным денежным потерям. Решение данного кейса очень хорошо вписывается в концепцию «Автоматизация сетевой инфраструктуры». С помощью средств автоматизации мы покажем, как можно эффективно решать сложные задачи в сжатые сроки, и поразмышляем на тему, почему перспективнее эти задачи надо решать именно так, а не иначе (через консоль).\n\nDisclaimer\n\nОсновными инструментами для автоматизации у нас являются Ansible (как средство автоматизации) и Git (как хранилище playbook-ов Ansible). Сразу хочется оговориться, что это не ознакомительная статья, где мы говорим про логику работы Ansible или Git, и объясняем базовые вещи (например, что такое роли\\таски\\модули\\инвентаризационные файлы\\переменные в Ansible, или что происходит при введении команд git push или git commit). Это история не про то, как можно поупражняться в Ansible, настроить на оборудовании NTP или SMTP. Это история про то, как можно быстро и желательно без ошибок решать сетевую проблему. Также желательно иметь хорошее представление о том, как работает сеть, в частности, что такое стек протоколов TCP/IP, OSPF, BGP. Выбор Ansible и Git тоже вынесем за скобки. Если для вас еще стоит выбор конкретного решения, то очень рекомендуем прочитать книжку «Network Programmability and Automation. Skills for the Next-Generation Network Engineer» by Jason Edelman, Scott S. Lowe, and Matt Oswalt.\n\nТеперь к делу.\n\nПостановка задачи\n\nПредставим ситуацию: 3 часа ночи, вы крепко спите и видите сны. Звонок на телефон. Звонит технический директор:\n\n— Да?\n— ###, ####, #####, кластер межсетевых экранов упал и не поднимается!!!\nВы протираете глаза, пытаетесь осознать происходящее и представить, как такое вообще могло произойти. В трубке слышно, как рвутся волосы на голове директора, и он просит перезвонить, потому что по второй линии ему звонит генеральный.\n\nСпустя полчаса вы собрали первые вводные от дежурной смены, разбудили всех, кого можно было разбудить. В итоге технический директор не соврал, все так и есть, основной кластер межсетевых экранов упал, и никакие базовые телодвижения не приводят его в чувства. Все сервисы, которые предлагает компания, не работают.\n\nВыберите проблему на ваш вкус, каждый вспомнит что-то свое. Например, после ночного обновления в отсутствие большой нагрузки все работало хорошо, и все довольные поехали спать. Пошел трафик, и стали переполняться буферы интерфейсов из-за бага в драйвере сетевой карты.\n\nСитуацию хорошо может описать Джеки Чан.\n\n\n\nСпасибо, Джеки.\n\nНе очень приятна ситуация, не правда ли?\n\nОставим на время нашего сетевого бро с его грустными мыслями.\n\nОбсудим, как будут развиваться события дальше.\n\nПредлагаем следующий порядок изложения материала\n\nРассмотрим схему сети и разберем как она работает;\nОпишем как мы переносим настройки с одного роутера на другой с помощью Ansible;\nПоговорим про автоматизацию ИТ-инфраструктуры в целом.\n\nСхема сети и ее описание\n\nСхема\n\n\n\n\n\nРассмотрим логическую схему нашей организации. Мы не будем называть конкретных производителей оборудования, в рамках статьи это не имеет значения (Внимательный читатель сам догадается, что за оборудование используется). Это как раз один из хороших плюсов работы с Ansible, при настройке нам в целом все равно, что это за оборудование. Просто для понимания, это оборудование известных вендоров, типа Cisco, Juniper, Check Point, Fortinet, Palo Alto …можете подставить свой вариант.\n\nУ нас есть две основные задачи по перемещению трафика:\n\nОбеспечить публикацию наших сервисов, которые являются бизнесом компании;\nОбеспечить связь с филиалами, удаленным ЦОДом и сторонними организациями (партнерами и клиентами), а также выход филиалов в интернет через центральный офис.\n\nНачнем с основных элементов:\n\nДва пограничных маршрутизатора (BRD-01, BRD-02);\nКластер межсетевых экранов (FW-CLUSTER);\nКоммутатор ядра (L3-CORE);\nРоутер, который станет спасательным кругом (по ходу решения проблемы мы перенесем сетевые настройки с FW-CLUSTER на EMERGENCY) (EMERGENCY);\nКоммутаторы для управления сетевой инфраструктурой (L2-MGMT);\nВиртуальная машина с Git и Ansible (VM-AUTOMATION);\nНоутбук, на котором производится тестирование и разработка playbook-ов для Ansible (Laptop-Automation).\n\nВ сети настроен динамический протокол маршрутизации OSPF со следующими area-ми:\n\nArea 0 – область, в которую включены роутеры, отвечающие за перемещение трафика в зоне EXCHANGE;\nArea 1 – область, в которую включены роутеры, отвечающие за работу сервисов компании;\nArea 2 – область, в которую включены роутеры, отвечающие за маршрутизацию management-трафика;\nArea N – области филиальных сетей.\n\nНа пограничных маршрутизаторах создано по виртуальному маршрутизатору (VRF-INTERNET), на которых поднят eBGP full view с соответствующим присвоенным AS. Между VRF-ами настроен iBGP. У компании есть пул белых адресов, которые опубликованы на этих VRF-INTERNET. Часть белых адресов маршрутизируется напрямую на FW-CLUSTER (адреса, на которых работают сервисы компании), часть маршрутизируется через зону EXCHANGE (внутренние сервисы компании, требующие внешних ip-адресов, и внешние адреса NAT для офисов). Далее трафик попадает на виртуальные роутеры, созданные на L3-CORE с белыми и серыми адресами (зоны безопасности).\n\nВ Management-сети используются выделенные коммутаторы и представляют собой физически выделенную сеть. Management сеть также поделена на зоны безопасности.\nМаршрутизатор EMERGENCY физически и логически дублирует FW-CLUSTER. На нем отключены все интерфейсы кроме тех, которые смотрят в management-сеть.\n\nАвтоматизация и ее описание\n\nМы разобрались, как работает сеть. Теперь разберем по шагам, что же мы будем делать, чтобы перебросить трафик с FW-CLUSTER на EMERGENCY:\n\nОтключаем интерфейсы на коммутаторе ядра (L3-CORE), которые связывают его с FW-CLUSTER;\nОтключаем интерфейсы на коммутаторе ядра L2-MGMT, которые связывают его с FW-CLUSTER;\nНастраиваем маршутизатор EMERGENCY (по умолчанию на нем выключены все интерфейсы, кроме тех, которые связаны с L2-MGMT):\n\nВключаем интерфейсы на EMERGENCY;\nНастраиваем внешний ip-адрес (для NAT), который был на FW-Cluster;\nГенерируем gARP запросы, чтобы в arp-таблицах L3-CORE поменялись мак-адреса с FW-Cluster на EMERGENCY;\nПрописываем маршрут по умолчанию статикой до BRD-01, BRD-02;\nСоздаем правила NAT;\nПоднимаем на EMERGENCY OSPF Area 1;\nПоднимаем на EMERGENCY OSPF Area 2;\nМеняем стоимость маршрутов в Area 1 на 10;\nМеняем стоимость дефолтного маршрута в Area 1 на 10;\nМеняем ip-адреса, связанные с L2-MGMT (на те, которые были на FW-CLUSTER);\nГенерируем gARP запросы, чтобы в arp-таблицах L2-MGMT поменялись мак-адреса с FW-CLUSTER на EMERGENCY.\n\nОпять же возвращаемся к изначальной постановке задачи. Три часа ночи, огромный стресс, ошибка на любом из этапов может привести к новым проблемам. Готовы набирать команды через CLI? Да? Ок, идите хотя бы сполосните лицо, кофе выпейте и соберите волю в кулак.\nБрюс, помоги, пожалуйста, ребятам.\n\n\n\nНу а мы продолжаем пилить нашу автоматизацию.\nНиже представлена схема работы playbook-а в терминах Ansible. Это схема отражает то, что мы описали чуть выше, просто уже конкретная реализация в Ansible.\n\n\nНа данном этапе мы осознали, что надо сделать, разработали playbook, провели тестирование, теперь мы готовы его запустить.\n\nЕще одно небольшое лирическое отступление. Легкость повествования не должна вводить вас в заблуждение. Процесс написания playbook-ов не был простыми и быстрым, как может показаться. Тестирование заняло довольно много времени, был создан виртуальный стенд, решение многократно обкатывалось, было проведено порядка 100 тестов.\n\nЗапускаем… Есть ощущение, что все происходит очень медленно, где-то есть ошибка, что-то в итоге не заработает. Ощущение прыжка с парашютом, а парашют что-то сразу не хочет открываться…это нормально.\n\nДалее читаем результат выполненных операций playbook-а Ansible (ip-адреса в целях конспирации заменили ):\n\n[xxx@emergency ansible]$ ansible-playbook -i /etc/ansible/inventories/prod_inventory.ini /etc/ansible/playbooks/emergency_on.yml \n\nPLAY [------->Emergency on VCF] ********************************************************\n\nTASK [vcf_junos_emergency_on : Disable PROD interfaces to FW-CLUSTER] *********************\nchanged: [vcf]\n\nPLAY [------->Emergency on MGMT-CORE] ************************************************\n\nTASK [mgmt_junos_emergency_on : Disable MGMT interfaces to FW-CLUSTER] ******************\nchanged: [m9-03-sw-03-mgmt-core]\n\nPLAY [------->Emergency on] ****************************************************\n\nTASK [mk_routeros_emergency_on : Enable EXT-INTERNET interface] **************************\nchanged: [m9-04-r-04]\n\nTASK [mk_routeros_emergency_on : Generate gARP for EXT-INTERNET interface] ****************\nchanged: [m9-04-r-04]\n\nTASK [mk_routeros_emergency_on : Enable static default route to EXT-INTERNET] ****************\nchanged: [m9-04-r-04]\n\nTASK [mk_routeros_emergency_on : Change NAT rule to EXT-INTERNET interface] ****************\nchanged: [m9-04-r-04] => (item=12)\nchanged: [m9-04-r-04] => (item=14)\nchanged: [m9-04-r-04] => (item=15)\nchanged: [m9-04-r-04] => (item=16)\nchanged: [m9-04-r-04] => (item=17)\n\nTASK [mk_routeros_emergency_on : Enable OSPF Area 1 PROD] ******************************\nchanged: [m9-04-r-04]\n\nTASK [mk_routeros_emergency_on : Enable OSPF Area 2 MGMT] *****************************\nchanged: [m9-04-r-04]','2020-04-08 10:04:45','Network automation. Случай из жизни',20,15),(87,'','NEW',NULL,'Предполагается, что читатель уже имеет начальные знания языка C, что-то знает о Zigbee, чипе cc2530, методах его прошивания и использования, а также знаком с такими проектами, как zigbee2mqtt. Если нет — подготовьтесь или сходите почитать на https://myzigbee.ru и https://www.zigbee2mqtt.io/\nСтатья написана сперва подробно, но постепенно ускоряется и уже не останавливается на деталях, а описывает готовый код прошивки. Если кому-то не интересны рассуждения, то просто открывайте исходники прошивки и читайте их.\n\nИсходный код готовой прошивки\n\nКод и подход к разработке не претендует на идеальность. “Я не волшебник, я только учусь.”\n\nЦель\n\nОсновная цель — разобраться, как писать прошивки под Z-Stack, давно хотел.&nbsp;<div><br></div><div><img src=\"images/upload/631/749/267/36296AF9AB1B0F2494E631B2D1FAE10C.jpg\"><br></div><div><br></div><div>Поэтому решил реализовать альтернативную прошивку под готовое оборудование (в качестве примера выбрано реле Sonoff BASICZBR3) и добавить возможность подключения популярного датчика температуры ds18b20.\n\nДополнительно хотел показать начинающим Zigbee-разработчикам пример разработки прошивки под чип TI cc2530 на Z-Stack.\n\n1. Подготовка\n\nДля начала разработки нужно скачать и установить Z-Stack 3.0.2 — это SDK для разработки прошивок с примерами и документацией.\nТакже нужно скачать и установить IAR Embeded Workbench for 8051 — это среда разработки с возможностью компиляции под чипы TI cc2530. Бесплатный период использования — 1 месяц (но ищущий найдет решение).\n\nДля разработки и отладки я использую CCDebugger — он позволяет не только прошивать чипы cc2531/cc2530, но и выполнять отладку приложения в среде IAR.\n\n\n\nДля упрощения экспериментов, макетирование и отладку я делаю на devboard и соответствующем модуле cc2530:\n\n\n\n2. Создание нового приложения\n\nСоздаем новый проект на база GenericApp. Это пример базового приложения на Z-Stack. Располагается оно в папке Z-Stack 3.0.2\\Projects\\zstack\\HomeAutomation\\GenericApp.\nКопируем рядом и переименовываем, например, в DIYRuZRT (так назовем приложение для нашего устройства).\n\nВнутри папки CC2530DB есть файлы:\n\nGenericApp.ewd — настройки проекта для C-SPY\nGenericApp.ewp — файл проекта\nGenericApp.eww — рабочая область Workspace\n\nПереименовываем файлы в DIYRuZRT.eww и DIYRuZRT.ewp.\n\nВнутри всех файлов (в том числе и в папке Source) также меняем все упоминания GenericApp на DIYRuZRT.\n\nТеперь открываем проект DIYRuZRT.ewp в IAR. Выбираем конфигурацию RouterEB и выполняем Rebuild All.\n\n\n\nВ папке CC2530DB создастся папка RouterEB, а внутри, в папке EXE, появится файл DIYRuZRT.d51 — этот файл удобен для прошивки и отладки из IAR.\n\nНо если нам надо прошить прошивку через SmartRF Flash Programmer, то сделаем небольшие изменения. Для этого в настройках проекта в разделе Link на вкладке Output поменяем настройки Output file и Format:\n\n\n\nПосле этого в папке EXE будет создаваться файл прошивки DIYRuZRT.hex удобный для прошивания из других инструментов и другими способами.\nНо после заливки этой прошивки устройство не подключается к сети. Что ж, будем разбираться.\n\n3. Немного терминологии\n\nВ терминологии Zigbee есть следующие понятия:\n\nEndpoint (эндпоинт) — точка описания конечного устройства. Обычно в простых устройствах один эндпоинт. В многофункциональных устройствах их может быть несколько, также как в устройствах с разными профилями взаимодействия (один профиль — один эндпоинт).\nCluster (кластер) — набор атрибутов и команд, относящихся к единому функционалу (вкл/выкл, регулирование освещения, температурные измерения и т.п.). Кластер указывает на возможности, реализуемые эндпоинтом. В одном эндпоинте можно реализовать несколько разных кластеров, но не одинаковых.\nAttribute (атрибут) — характеристика кластера, значение которого можно прочитать или записать. В кластере может быть множество атрибутов.\nCommand (команда) — управляющее сообщение, которое может обработать кластер. У команды могут быть параметры. Это реализуется функцией, которая выполняется при при получении команды и параметров.\n\nВиды кластеров, атрибутов, команд стандартизованы в Zigbee Cluster Library. Но производители могут применять собственные кластеры, со своими атрибутами и командами.\n\nНекоторые горе-производители наплевательски относятся к стандартам и делают что-то около стандарта. Потом под них приходится подстраиваться.\n\nВ терминологии Z-Stack тоже есть свои понятия, например:\n\nOSAL (Operating System Abstraction Layer) — уровень абстракции Операционной системы. Здесь оперируют задачами (tasks), сообщениями (messages), событиями (events), таймерами (timers) и другими объектами.\nHAL (Hardware Abstraction Layer) — уровень абстракции оборудования. Здесь оперируют кнопками (keys), светодиодами (leds), прерываниями (Interrupt) и т.п.\n\nАппаратный уровень обеспечивает изоляцию программного кода и оборудования, которым он управляет. Операционный уровень предоставляет механизмы построения и взаимодействия между элементами приложения.\n\nИспользование этого всего вас ждет ниже и в принципе при разработке прошивок.</div>','2020-04-08 10:25:13','Пишем прошивку под TI cc2530 на Z-Stack 3.0 для Zigbee реле Sonoff BASICZBR3 с датчиком ds18b20',0,2),(90,'','NEW',NULL,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">Run the Spring Boot integration test or unit test, many annoying DEBUG and INFO logs are displayed in the console.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\"><em style=\"box-sizing: border-box;\">P.S Tested with Spring Boot 2</em></p><div class=\"filename\" style=\"box-sizing: border-box; background-color: rgb(230, 230, 252); border-top: 1px solid rgb(209, 209, 232); border-right: 1px solid rgb(209, 209, 232); border-left: 1px solid rgb(209, 209, 232); border-image: initial; padding: 0.5rem 1rem; border-bottom: none; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; margin-top: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Console</div><pre class=\"language-bash code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-bash\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\">2019-03-04 13:15:25.151  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.157  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.t.c.support.AbstractContextLoader    <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.158  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> t.c.s.AnnotationConfigContextLoaderUtils <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.298  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.401  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.430  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n\n  <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">.</span>   ____          _            __ _ _\n /\\\\ / ___<span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'</span>_ <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\'_| | \'</span>_ \\/ _` <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> \\ \\ \\ \\\n \\\\/  ___<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">||</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>  <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n  \'  <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>____<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> .__<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_\\__, <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> / / / /\n <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>___/<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>/_/_/_/\n :: Spring Boot ::        <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>v2.1.2.RELEASE<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n\n2019-03-04 13:15:25.886 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.boot.SpringApplication               <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.903 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.b.c.c.ConfigFileApplicationListener  <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.904 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.b.c.c.ConfigFileApplicationListener  <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.904 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.b.c.c.ConfigFileApplicationListener  <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.905 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.w.c.s.GenericWebApplicationContext   <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.922 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.b.f.s.DefaultListableBeanFactory     <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.937 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.b.f.s.DefaultListableBeanFactory     <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:26.004 DEBUG 7484 --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.c.a.ClassPathBeanDefinitionScanner   <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span>\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><h2 style=\"box-sizing: border-box; margin: 40px 0px 5px; line-height: 1.2; font-size: 1.5rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; background-color: rgb(255, 255, 255);\">Solution</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">To disable the logs, turn off the&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">logging.level</code>&nbsp;in both&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">application.properties</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">logback-test.xml</code></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">1.1 Turn off the logging in&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">application.properties</code></p><div class=\"filename\" style=\"box-sizing: border-box; background-color: rgb(230, 230, 252); border-top: 1px solid rgb(209, 209, 232); border-right: 1px solid rgb(209, 209, 232); border-left: 1px solid rgb(209, 209, 232); border-image: initial; padding: 0.5rem 1rem; border-bottom: none; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; margin-top: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">application.properties</div><pre class=\"language-bash code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-bash\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\">logging.level.org.springframework<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>OFF\nlogging.level.root<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>OFF\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">The DEBUG or INFO logs below the Spring banner are off now.</p><div class=\"filename\" style=\"box-sizing: border-box; background-color: rgb(230, 230, 252); border-top: 1px solid rgb(209, 209, 232); border-right: 1px solid rgb(209, 209, 232); border-left: 1px solid rgb(209, 209, 232); border-image: initial; padding: 0.5rem 1rem; border-bottom: none; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; margin-top: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Console</div><pre class=\"language-bash code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-bash\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\">2019-03-04 13:15:25.151  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.157  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> o.s.t.c.support.AbstractContextLoader    <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.158  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> t.c.s.AnnotationConfigContextLoaderUtils <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.298  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.401  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n2019-03-04 13:15:25.430  INFO   --- <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">[</span>           main<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">]</span> .b.t.c.SpringBootTestContextBootstrapper <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">:</span> \n\n  <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">.</span>   ____          _            __ _ _\n /\\\\ / ___<span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'</span>_ <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\'_| | \'</span>_ \\/ _` <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> \\ \\ \\ \\\n \\\\/  ___<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">||</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>  <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n  \'  <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>____<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> .__<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_\\__, <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> / / / /\n <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>___/<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>/_/_/_/\n :: Spring Boot ::        <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>v2.1.2.RELEASE<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">1.2 Create a&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">logback-test.xml</code>&nbsp;in&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">src/test/resources</code>. Again, turn off the logging here.</p><div class=\"pic\" style=\"box-sizing: border-box; background-color: rgb(249, 249, 249); border: 1px solid rgb(221, 221, 221); margin-bottom: 1rem; padding: 20px; text-align: center; border-radius: 4px; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><img class=\" lazyloaded\" src=\"https://mkyong.com/wp-content/uploads/2017/03/spring-boot-test-logback.png\" data-src=\"/wp-content/uploads/2017/03/spring-boot-test-logback.png\" alt=\"logback-test.xml\" style=\"box-sizing: border-box; vertical-align: middle; border-style: none; opacity: 1; transition: opacity 0.3s ease 0s; height: auto; max-width: 100%;\"></div><div class=\"filename\" style=\"box-sizing: border-box; background-color: rgb(230, 230, 252); border-top: 1px solid rgb(209, 209, 232); border-right: 1px solid rgb(209, 209, 232); border-left: 1px solid rgb(209, 209, 232); border-image: initial; padding: 0.5rem 1rem; border-bottom: none; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; margin-top: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">logback-test.xml</div><pre class=\"language-markup code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-markup\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\"><span class=\"token prolog\" style=\"box-sizing: border-box; color: rgb(112, 128, 144);\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"token tag\" style=\"box-sizing: border-box; color: rgb(153, 0, 85);\"><span class=\"token tag\" style=\"box-sizing: border-box;\"><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">&lt;</span>configuration</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">&gt;</span></span>\n    <span class=\"token tag\" style=\"box-sizing: border-box; color: rgb(153, 0, 85);\"><span class=\"token tag\" style=\"box-sizing: border-box;\"><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">&lt;</span>include</span> <span class=\"token attr-name\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">resource</span><span class=\"token attr-value\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\"><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">=</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">\"</span>org/springframework/boot/logging/logback/base.xml<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">\"</span></span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">/&gt;</span></span>\n    <span class=\"token tag\" style=\"box-sizing: border-box; color: rgb(153, 0, 85);\"><span class=\"token tag\" style=\"box-sizing: border-box;\"><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">&lt;</span>logger</span> <span class=\"token attr-name\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">name</span><span class=\"token attr-value\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\"><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">=</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">\"</span>org.springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">\"</span></span> <span class=\"token attr-name\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">level</span><span class=\"token attr-value\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\"><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">=</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">\"</span>OFF<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">\"</span></span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">/&gt;</span></span>\n<span class=\"token tag\" style=\"box-sizing: border-box; color: rgb(153, 0, 85);\"><span class=\"token tag\" style=\"box-sizing: border-box;\"><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">&lt;/</span>configuration</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">&gt;</span></span>\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">Good, just left the Spring banner.</p><div class=\"filename\" style=\"box-sizing: border-box; background-color: rgb(230, 230, 252); border-top: 1px solid rgb(209, 209, 232); border-right: 1px solid rgb(209, 209, 232); border-left: 1px solid rgb(209, 209, 232); border-image: initial; padding: 0.5rem 1rem; border-bottom: none; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; margin-top: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Console</div><pre class=\"language-bash code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-bash\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\">  <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">.</span>   ____          _            __ _ _\n /\\\\ / ___<span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'</span>_ <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\'_| | \'</span>_ \\/ _` <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> \\ \\ \\ \\\n \\\\/  ___<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">||</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>  <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n  \'  <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>____<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> .__<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_\\__, <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span> / / / /\n <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>_<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">==</span><span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">|</span>___/<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>/_/_/_/\n :: Spring Boot ::        <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>v2.1.2.RELEASE<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">1.3 Turn off the Spring banner.</p><div class=\"filename\" style=\"box-sizing: border-box; background-color: rgb(230, 230, 252); border-top: 1px solid rgb(209, 209, 232); border-right: 1px solid rgb(209, 209, 232); border-left: 1px solid rgb(209, 209, 232); border-image: initial; padding: 0.5rem 1rem; border-bottom: none; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; margin-top: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">application.properties</div><pre class=\"language-bash code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-bash\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\">logging.level.org.springframework<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>OFF\nlogging.level.root<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>OFF\nspring.main.banner-mode<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>off\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">Done, the console should be empty now.</p>','2020-04-08 12:30:52','Spring Boot Test – How to disable DEBUG and INFO logs',0,15),(94,'','ACCEPTED',2,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">Spring Boot integeration test, but unable to&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">@Autowired MockMvc</code></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\"><em style=\"box-sizing: border-box;\">P.S Tested with Spring Boot 2.1.2.RELEASE</em></p><div class=\"filename\" style=\"box-sizing: border-box; background-color: rgb(230, 230, 252); border-top: 1px solid rgb(209, 209, 232); border-right: 1px solid rgb(209, 209, 232); border-left: 1px solid rgb(209, 209, 232); border-image: initial; padding: 0.5rem 1rem; border-bottom: none; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; margin-top: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">BookControllerTest.java</div><pre class=\"language-java code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-java\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\"><span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">package</span> com<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>mkyong<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>junit<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>Test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>junit<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>runner<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>RunWith<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>beans<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>factory<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>annotation<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>Autowired<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>boot<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>context<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>SpringBootTest<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>http<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MediaType<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>security<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>context<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>support<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>WithMockUser<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>context<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>junit4<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>SpringRunner<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvc<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>hamcrest<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>Matchers<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>is<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>request<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvcRequestBuilders<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>get<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>result<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvcResultHandlers<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>print<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>result<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvcResultMatchers<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>*<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n\n<span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@RunWith</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>SpringRunner<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">class</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n<span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@SpringBootTest</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>webEnvironment <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span> SpringBootTest<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>WebEnvironment<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>RANDOM_PORT<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">class</span> <span class=\"token class-name\" style=\"box-sizing: border-box;\">BookControllerTest</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">{</span>\n\n    <span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@Autowired</span>\n    <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">private</span> MockMvc mockMvc<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span> <span class=\"token comment\" style=\"box-sizing: border-box; color: rgb(112, 128, 144);\">//null?</span>\n\n    <span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@Test</span>\n    <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">void</span> <span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">findOne</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">throws</span> Exception <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">{</span>\n        mockMvc<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">perform</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">get</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\"/books/1\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andDo</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">print</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andExpect</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">content</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">contentType</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>MediaType<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>APPLICATION_JSON_UTF8<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andExpect</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">status</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">isOk</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andExpect</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">jsonPath</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\"$.id\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">,</span> <span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">is</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token number\" style=\"box-sizing: border-box; color: rgb(153, 0, 85);\">1</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">}</span>\n\n<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">}</span>\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><pre class=\"language-bash code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-bash\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\">Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: \n	No qualifying bean of <span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">type</span> <span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\'org.springframework.test.web.servlet.MockMvc\'</span> available: \n	expected at least 1 bean <span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">which</span> qualifies as autowire candidate. \n	Dependency annotations: <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">{</span>@org.springframework.beans.factory.annotation.Autowired<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>required<span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span>true<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">}</span>\n	\n	//<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">..</span>.\n	<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">..</span>. 28 <span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">more</span>\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div></pre><h2 style=\"box-sizing: border-box; margin: 40px 0px 5px; line-height: 1.2; font-size: 1.5rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; background-color: rgb(255, 255, 255);\">Solution</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: rgb(33, 37, 41); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\">Add this&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">@AutoConfigureMockMvc</code>&nbsp;to enable and configure auto-configuration of&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(232, 62, 140); word-break: break-word; background-color: rgb(241, 241, 241); padding-left: 4px; padding-right: 4px;\">MockMvc</code></p><pre class=\"language-java code-toolbar\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: 14px; margin-bottom: 1rem; overflow: auto; border-top-left-radius: 0px; border-top-right-radius: 0px; overflow-wrap: normal; background-color: rgb(247, 247, 249); text-shadow: rgb(255, 255, 255) 0px 1px; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative; border: 1px solid rgb(209, 209, 232); padding: 1rem 0px 1rem 1rem !important;\"><code class=\" language-java\" style=\"box-sizing: border-box; font-family: Consolas, Monaco, &quot;andale mono&quot;, &quot;ubuntu mono&quot;, monospace; font-size: inherit; word-break: normal; background: 0px 0px; padding: 0px; text-shadow: rgb(255, 255, 255) 0px 1px; word-spacing: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\"><span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">package</span> com<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>mkyong<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>junit<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>Test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>junit<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>runner<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>RunWith<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>beans<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>factory<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>annotation<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>Autowired<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>boot<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>autoconfigure<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>AutoConfigureMockMvc<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>boot<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>context<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>SpringBootTest<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>http<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MediaType<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>security<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>context<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>support<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>WithMockUser<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>context<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>junit4<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>SpringRunner<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvc<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>hamcrest<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>Matchers<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>is<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>request<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvcRequestBuilders<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>get<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>result<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvcResultHandlers<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>print<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">import</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">static</span> org<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>springframework<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>test<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>web<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>servlet<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>result<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>MockMvcResultMatchers<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>*<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n\n<span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@RunWith</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>SpringRunner<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">class</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n<span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@SpringBootTest</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>webEnvironment <span class=\"token operator\" style=\"box-sizing: border-box; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5);\">=</span> SpringBootTest<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>WebEnvironment<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>RANDOM_PORT<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n<span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@AutoConfigureMockMvc</span> <span class=\"token comment\" style=\"box-sizing: border-box; color: rgb(112, 128, 144);\">//need this in Spring Boot test</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">class</span> <span class=\"token class-name\" style=\"box-sizing: border-box;\">BookControllerTest</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">{</span>\n\n    <span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@Autowired</span>\n    <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">private</span> MockMvc mockMvc<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n\n    <span class=\"token annotation punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">@Test</span>\n    <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">void</span> <span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">findOne</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span> <span class=\"token keyword\" style=\"box-sizing: border-box; color: rgb(0, 119, 170);\">throws</span> Exception <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">{</span>\n        mockMvc<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">perform</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">get</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\"/books/1\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andDo</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">print</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andExpect</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">content</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">contentType</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span>MediaType<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span>APPLICATION_JSON_UTF8<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andExpect</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">status</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">isOk</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span>\n                <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">.</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">andExpect</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">jsonPath</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token string\" style=\"box-sizing: border-box; color: rgb(102, 153, 0);\">\"$.id\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">,</span> <span class=\"token function\" style=\"box-sizing: border-box; color: rgb(221, 74, 104);\">is</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">(</span><span class=\"token number\" style=\"box-sizing: border-box; color: rgb(153, 0, 85);\">1</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">;</span>\n    <span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">}</span>\n\n<span class=\"token punctuation\" style=\"box-sizing: border-box; color: rgb(153, 153, 153);\">}</span>\n</code><div class=\"toolbar\" style=\"box-sizing: border-box; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 1;\"><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\">Copy</a></div></div><div><div class=\"toolbar-item\" style=\"box-sizing: border-box; display: inline-block;\"><a style=\"box-sizing: border-box; color: rgb(187, 187, 187); background: rgba(224, 224, 224, 0.2); cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em;\"><br></a></div></div></pre>','2020-04-08 12:32:05','Spring Boot Test unable to autowired MockMvc',28,15),(110,'','ACCEPTED',2,'<div>Я у себя буду делать в Intellij Idea Enterprise Edition. Но все мои примеры должны так же работать и в бесплатной Intellij Idea Community Edition. Просто если увидите на скриншотах, что у меня есть какое-то окно, которого нет у вас — не переживайте, для данного проекта это не критично :)</div><div><br></div><div><img src=\"images/upload/157/546/0889/9DF058C5CFDFA8FF675B2AFDBEE2F017.jpg\"><br></div><div><br></div><div>Для начала создаем пустой мавен проект. Я показывал как это сделать в статье (читать до слов \"Пришло время наш мавен-проект превратить в web-проект.\", после этого там уже показывается как сделать веб-проект, а этого нам сейчас не нужно)</div><div><br></div><div>Создадим в папке src/main/java какой-нибудь пакет (в моем случае я его назвал \"ru.javarush.info.fatfaggy.animals\", вы можете назвать как хотите, просто в нужных местах не забудьте на свое название заменять). И создадим класс Main в котором сделаем метод</div><div><br></div><div>public static void main(String[] args) {</div><div>&nbsp; &nbsp; ...</div><div>}</div><div><br></div><div>После чего откроем файл pom.xml и добавим там раздел dependencies. Теперь идем в мавеновский репозиторий и ищем там spring context последней стабильной версии, и вставляем то, что получили внутрь раздела dependencies. Чуть более подробно я описал этот процесс в этой статье (см. раздел \"Подключение зависимостей в мавене\").</div><div><br></div><div>Тогда мавен сам найдет и скачает нужные зависимости, и в итоге у вас должно получиться что-то типа такого:</div><div><div><br></div></div><div><div>В левом окошке видно структуру проекта с пакетом и классом Main.</div><div>В среднем окне показано как у меня выглядит pom.xml. Я еще добавил туда раздел properties, в котором указал мавену какая у меня версия джавы используется в исходниках и в какую версию компилировать. Это просто чтобы идея предупреждения мне не кидала при запуске, что используется старая версия джавы. Можете делать, можете нет)</div><div><br></div><div>В правом же окошке — видно что хоть мы и подключили только spring context — он автоматически за собой подтянул еще и core, beans, aop и expression. Можно было подключать отдельно каждый модуль, прописывая в помнике для каждого зависимость с явным указанием версии, но нас пока устраивает и такой вариант, как есть сейчас.</div><div><br></div><div>Теперь создадим пакет entities (сущности) и в нем создадим 3 класса: Cat, Dog, Parrot. Пусть у каждого животного будет имя (private String name, можете захардкодить туда какие-то значения), и геттеры/сеттеры публичные.</div><div><br></div><div>Теперь переходим в класс Main и в методе main() пишем что-то типа такого:</div></div>','2020-04-08 17:39:05','Spring для ленивых. Основы, базовые концепции и примеры с кодом. Часть 2',0,2),(175,'','ACCEPTED',2,'И тут начался текст - рыба, просто так.&nbsp;<div><br><div><span style=\"font-size: 18px; background-color: rgb(255, 255, 255); font-family: Helvetica, Arial, Freesans, Clean, sans-serif;\">Path Patterns</span></div><div><div class=\"section\" style=\"margin: 0px; color: rgb(51, 51, 51); font-family: Helvetica, Arial, Freesans, Clean, sans-serif; background-color: rgb(255, 255, 255);\"><p style=\"margin: 0px 0px 15px;\">In addition to URI templates, the&nbsp;<code class=\"interfacename\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">@RequestMapping</code>&nbsp;annotation also supports Ant-style path patterns (for example,&nbsp;<code class=\"filename\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">/myPath/*.do</code>). A combination of URI templates and Ant-style globs is also supported (for example,&nbsp;<code class=\"filename\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">/owners/*/pets/{petId}</code>).</p></div><div class=\"section\" style=\"margin: 0px; color: rgb(51, 51, 51); font-family: Helvetica, Arial, Freesans, Clean, sans-serif; background-color: rgb(255, 255, 255);\"><div class=\"titlepage\" style=\"margin: 0px;\"><div style=\"margin: 0px;\"><div style=\"margin: 0px;\"><h4 class=\"title\" style=\"color: rgb(0, 0, 0); cursor: text; margin: 30px 0px 10px -1em; padding: 0px 0px 0px 1em; font-size: 18px;\"><a name=\"mvc-ann-requestmapping-placeholders\" href=\"https://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/mvc.html#mvc-ann-requestmapping-placeholders\" style=\"color: rgb(0, 0, 0); text-decoration-line: none; position: absolute; visibility: hidden; display: block; font-size: 0.85em; margin-top: 0.05em; margin-left: -1em; vertical-align: text-top;\"></a>Patterns with Placeholders</h4></div></div></div><p style=\"margin: 0px 0px 15px;\">Patterns in&nbsp;<code class=\"interfacename\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">@RequestMapping</code>&nbsp;annotations support ${...} placeholders against local properties and/or system properties and environment variables. This may be useful in cases where the path a controller is mapped to may need to be customized through configuration. For more information on placeholders see the Javadoc for&nbsp;<code class=\"classname\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">PropertyPlaceholderConfigurer</code>.</p></div><div class=\"section\" style=\"margin: 0px; color: rgb(51, 51, 51); font-family: Helvetica, Arial, Freesans, Clean, sans-serif; background-color: rgb(255, 255, 255);\"><div class=\"titlepage\" style=\"margin: 0px;\"><div style=\"margin: 0px;\"><div style=\"margin: 0px;\"><h4 class=\"title\" style=\"color: rgb(0, 0, 0); cursor: text; margin: 30px 0px 10px -1em; padding: 0px 0px 0px 1em; font-size: 18px;\"><a name=\"mvc-ann-matrix-variables\" href=\"https://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/mvc.html#mvc-ann-matrix-variables\" style=\"color: rgb(0, 0, 0); text-decoration-line: none; position: absolute; visibility: hidden; display: block; font-size: 0.85em; margin-top: 0.05em; margin-left: -1em; vertical-align: text-top;\"></a>Matrix Variables</h4></div></div></div><p style=\"margin: 0px 0px 15px;\">The URI specification&nbsp;<a class=\"ulink\" href=\"https://tools.ietf.org/html/rfc3986#section-3.3\" target=\"_top\" style=\"color: rgb(65, 131, 196); text-decoration-line: none;\">RFC 3986</a>&nbsp;defines the possibility of including name-value pairs within path segments. There is no specific term used in the spec. The general \"URI path parameters\" could be applied although the more unique&nbsp;<a class=\"ulink\" href=\"https://www.w3.org/DesignIssues/MatrixURIs.html\" target=\"_top\" style=\"color: rgb(65, 131, 196); text-decoration-line: none;\">\"Matrix URIs\"</a>, originating from an old post by Tim Berners-Lee, is also frequently used and fairly well known. Within Spring MVC these are referred to as matrix variables.</p><p style=\"margin: 15px 0px;\">Matrix variables can appear in any path segment, each matrix variable separated with a \";\" (semicolon). For example:&nbsp;<code class=\"code\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">\"/cars;color=red;year=2012\"</code>. Multiple values may be either \",\" (comma) separated&nbsp;<code class=\"code\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">\"color=red,green,blue\"</code>&nbsp;or the variable name may be repeated&nbsp;<code class=\"code\" style=\"font-size: 16px; font-family: Consolas, &quot;liberation mono&quot;, Courier, monospace; color: rgb(109, 24, 11); background-color: rgb(242, 242, 242); border: 1px solid rgb(204, 204, 204); border-radius: 4px; padding: 1px 3px 0px; text-shadow: none; white-space: nowrap;\">\"color=red;color=green;color=blue\"</code>.</p><p style=\"margin: 15px 0px;\">If a URL is expected to contain matrix variables, the request mapping pattern must represent them with a URI template. This ensures the request can be matched correctly regardless of whether matrix variables are present or not and in what order they are provided.</p><p style=\"margin: 15px 0px;\">Below is an example of extracting the matrix variable \"q\":</p></div><div>Это еще одна новая публикация с фото</div></div></div>','2020-04-13 13:47:11','Это еще одна новая публикация',2,2),(180,'','ACCEPTED',NULL,'Данная публикация появится сразу со статусом ACCEPTED<div><br></div><div><div>Path Patterns</div><div>In addition to URI templates, the @RequestMapping annotation also supports Ant-style path patterns (for example, /myPath/*.do). A combination of URI templates and Ant-style globs is also supported (for example, /owners/*/pets/{petId}).</div><div><br></div><div>Patterns with Placeholders</div><div>Patterns in @RequestMapping annotations support ${...} placeholders against local properties and/or system properties and environment variables. This may be useful in cases where the path a controller is mapped to may need to be customized through configuration. For more information on placeholders see the Javadoc for PropertyPlaceholderConfigurer.</div><div><br></div><div>Matrix Variables</div><div>The URI specification RFC 3986 defines the possibility of including name-value pairs within path segments. There is no specific term used in the spec. The general \"URI path parameters\" could be applied although the more unique \"Matrix URIs\", originating from an old post by Tim Berners-Lee, is also frequently used and fairly well known. Within Spring MVC these are referred to as matrix variables.</div><div><br></div><div>Matrix variables can appear in any path segment, each matrix variable separated with a \";\" (semicolon). For example: \"/cars;color=red;year=2012\". Multiple values may be either \",\" (comma) separated \"color=red,green,blue\" or the variable name may be repeated \"color=red;color=green;color=blue\".</div></div><div><div>ecification RFC 3986 defines the possibility of including name-value pairs within path segments. There is no specific term used in the spec. The general \"URI path parameters\" could be applied although the more unique \"Matrix URIs\", originating from an old post by Tim Berners-Lee, is also frequently used and fairly well known. Within Spring MVC these are referred to as matrix variables.</div><div><br></div><div>Matrix variables can appear in any path segment, each matrix variable separated with a \";\" (semicolon). For example: \"/cars;color=red;year=2012\". Multiple values may be either \",\" (comma) separated \"color=red,green,blue\" or the variable name may be repeated \"color=red;color=green;color=blue\".</div></div><div><div>ecification RFC 3986 defines the possibility of including name-value pairs within path segments. There is no specific term used in the spec. The general \"URI path parameters\" could be applied although the more unique \"Matrix URIs\", originating from an old post by Tim Berners-Lee, is also frequently used and fairly well known. Within Spring MVC these are referred to as matrix variables.</div><div><br></div><div>Matrix variables can appear in any path segment, each matrix variable separated with a \";\" (semicolon). For example: \"/cars;color=red;year=2012\". Multiple values may be either \",\" (comma) separated \"color=red,green,blue\" or the variable name may be repeated \"color=red;color=green;color=blue\".</div></div>','2020-04-13 18:37:35','Публикация для проверки отключенной премодерации',5,134),(224,'','ACCEPTED',2,'<span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Всем привет.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Познакомившись с библиотекой MockMvc, я обнаружил \"</span><i style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">наличие отсутствия</i><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">\" её упоминаний на Хабре. Постараюсь восполнить этот пробел, тем более, что наше&nbsp;</span><a href=\"http://habrahabr.ru/post/145158\" style=\"background-color: rgb(255, 255, 255); color: rgb(153, 34, 152); text-decoration-line: none; font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px;\">приложение ContactManager</a><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;как раз нуждается в автоматизированном тестировании.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><a name=\"habracut\" style=\"background-color: rgb(255, 255, 255); color: rgb(84, 142, 170); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px;\"></a><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Итак, основная тема урока — добавить в приложение тесты для контроллеров. В качестве бонуса мы сделаем это по модной,&nbsp;</span><a href=\"http://habrahabr.ru/post/112488\" style=\"background-color: rgb(255, 255, 255); color: rgb(153, 34, 152); text-decoration-line: none; font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px;\">«без-xml-ной»</a><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;технологии.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><h5 style=\"-webkit-font-smoothing: antialiased; margin: 0px; padding: 0px; font-weight: 500; font-size: 20px; line-height: 28px; font-family: &quot;Fira Sans&quot;, sans-serif; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">Обновление структуры проекта</h5><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Вначале обновим версии библиотек. SpringFramework к настоящему времени обновился уже до версии 3.2.1, и включает в себя вожделенный MockMvc, поэтому данное обновление необходимо. Spring Security немного отстает, но это (почти) не проблема. Версия Hibernate тоже подросла до 4.1.9.Final. Полный файл проекта вы найдете&nbsp;</span><a href=\"https://github.com/monzdrpower/ContactManager-MockMvc/blob/master/pom.xml\" style=\"background-color: rgb(255, 255, 255); color: rgb(153, 34, 152); text-decoration-line: none; font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px;\">в репозитории</a><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;(ссылка в конце статьи).</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Переход на 4 версию Hibernate требует небольшой доработки файла&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">data.xml</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">. Нужно поменять 3 на 4 в имени пакета&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">org.springframework.orm.hibernate4</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">, в бине&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">sessionFactory</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;убрать параметры&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">configLocation</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;и&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">configurationClass</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;и вместо них добавить параметр&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">packagesToScan</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">, куда перенести список пакетов классов с Hibernate-маппингом из файла&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">hibernate.cfg.xml</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">. Сам этот файл можно удалить, он нам уже не нужен. В итоге бин&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">sessionfactory</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;примет вид:</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><pre style=\"font-family: monospace, monospace; font-size: 16px; overflow: auto hidden; padding: 0px; word-break: break-all; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\"><code class=\"xml hljs\" style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; display: block; overflow-x: auto; padding: 17px 20px 20px; color: rgb(56, 58, 66); background: rgb(251, 253, 255); white-space: pre-wrap; border: 1px solid rgb(229, 232, 236);\">	<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">bean</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">id</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"sessionFactory\"</span></span></span><span class=\"hljs-tag\">\n		</span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">class</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"org.springframework.orm.hibernate4.LocalSessionFactoryBean\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n		<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">property</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">name</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"dataSource\"</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">ref</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"dataSource\"</span></span></span><span class=\"hljs-tag\"> /&gt;</span></span>\n		<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">property</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">name</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"packagesToScan\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n			<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">list</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n				<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">value</span></span></span><span class=\"hljs-tag\">&gt;</span></span>net.schastny.contactmanager.domain<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">value</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n				<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">value</span></span></span><span class=\"hljs-tag\">&gt;</span></span>com.acme.contactmanager.domain<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">value</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n			<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">list</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n		<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">property</span></span></span><span class=\"hljs-tag\">&gt;</span></span> \n		<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">property</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">name</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"hibernateProperties\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n			<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">props</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n				<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">key</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"hibernate.show_sql\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>true<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n				<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">key</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"hibernate.hbm2ddl.auto\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>create-drop<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n				<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">key</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"hibernate.dialect\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>${jdbc.dialect}<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n				<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\"> </span><span class=\"hljs-attr\" style=\"color: rgb(152, 104, 1);\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">key</span></span></span><span class=\"hljs-tag\">=</span><span class=\"hljs-string\" style=\"color: rgb(80, 161, 79);\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"hibernate.connection.charSet\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>UTF-8<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">prop</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n			<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">props</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n		<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">property</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n	<span class=\"hljs-tag\"><span class=\"hljs-tag\">&lt;/</span><span class=\"hljs-name\" style=\"color: rgb(228, 86, 73);\"><span class=\"hljs-tag\"><span class=\"hljs-name\">bean</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n</code></pre><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Также нам понадобятся тестовые ресурсы, поэтому создаем каталог&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">src/test/resources</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">, копируем в него настройки безопасности&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">security.xml</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">, создаем&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">testdb.properties</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;— файл свойств для базы данных. Без него можно обойтись, но опять таки в учебных целях мы посмотрим, как можно установить свойства в бины извне. Содержимое файла</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><pre style=\"font-family: monospace, monospace; font-size: 16px; overflow: auto hidden; padding: 0px; word-break: break-all; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\"><code class=\"nginx hljs\" style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; display: block; overflow-x: auto; padding: 17px 20px 20px; color: rgb(56, 58, 66); background: rgb(251, 253, 255); white-space: pre-wrap; border: 1px solid rgb(229, 232, 236);\">db.user.name=<span class=\"hljs-attribute\" style=\"color: rgb(80, 161, 79);\">sa</span>\ndb.user.pass=\n</code></pre><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Не бог весть что, но в качестве примера подойдет. Делаем копию&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">log4j.xml</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">&nbsp;и с ресурсами на этом все. Переходим к исходным кодам.</span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">Создаем каталог&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">src/test/groovy</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\">, пакет&nbsp;</span><code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">com.acme.contactmanager.test</code><span style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"></span><br style=\"color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px; background-color: rgb(255, 255, 255);\"><blockquote style=\"margin: 12px 0px; padding: 18px 20px; background: rgb(255, 247, 215); color: rgb(34, 34, 34); font-family: -apple-system, BlinkMacSystemFont, Arial, sans-serif; font-size: 16px;\">Чтобы мавен при сборке из командной строки нашел наши груви-тесты, добавим в pom.xml build-helper-maven-plugin<img src=\"images/upload/141/832/7665/9C265EF8A0B1A87FA10986A4F4C6C65E.jpg\"></blockquote>','2020-04-19 20:33:47','Очередная публикация с фото',4,2);
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tag2post`
--

DROP TABLE IF EXISTS `tag2post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tag2post` (
  `id` int NOT NULL,
  `post_id` int NOT NULL,
  `tag_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FKpjoedhh4h917xf25el3odq20i` (`post_id`),
  KEY `FKjou6suf2w810t2u3l96uasw3r` (`tag_id`),
  CONSTRAINT `FKjou6suf2w810t2u3l96uasw3r` FOREIGN KEY (`tag_id`) REFERENCES `tags` (`id`),
  CONSTRAINT `FKpjoedhh4h917xf25el3odq20i` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tag2post`
--

LOCK TABLES `tag2post` WRITE;
/*!40000 ALTER TABLE `tag2post` DISABLE KEYS */;
INSERT INTO `tag2post` VALUES (5,3,4),(7,3,6),(9,3,8),(12,10,11),(13,10,4),(30,29,4),(33,31,32),(35,34,6),(38,36,37),(40,39,4),(43,41,42),(45,41,44),(48,46,47),(51,49,50),(54,52,53),(57,55,56),(60,58,59),(63,61,62),(65,61,64),(68,66,67),(70,69,67),(73,71,72),(89,87,88),(92,90,91),(93,90,59),(95,94,91),(97,94,96),(177,175,176),(181,180,91),(225,224,4),(228,175,227),(230,10,229),(232,10,231);
/*!40000 ALTER TABLE `tag2post` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tags`
--

DROP TABLE IF EXISTS `tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tags` (
  `id` int NOT NULL,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tags`
--

LOCK TABLES `tags` WRITE;
/*!40000 ALTER TABLE `tags` DISABLE KEYS */;
INSERT INTO `tags` VALUES (4,'Habr'),(6,'Tag'),(8,'Shop'),(11,'Nasa'),(32,'OSM'),(37,'Математика'),(42,'Apache Kafka'),(44,'Java'),(47,'JetBrains'),(50,'Privacy'),(53,'Защита данных'),(56,'VoIP'),(59,'Log'),(62,'Обучение'),(64,'Android'),(67,'Удаленка'),(72,'automation'),(88,'Прошивка'),(91,'Spring'),(96,'Mock'),(176,'english'),(227,'english'),(229,'Nasa'),(231,'Habr');
/*!40000 ALTER TABLE `tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int NOT NULL,
  `code` varchar(255) DEFAULT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `is_moderator` bit(1) NOT NULL,
  `name` varchar(255) NOT NULL,
  `photo` text,
  `reg_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UK_6dotkott2kjsp8vw4d0m25fb7` (`email`),
  UNIQUE KEY `UK_3g1j96g94xpk3lpxl2qbl985x` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (2,NULL,'mail@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','','Модератор Всея Сайта','images/upload/avatars/F4BF30D2B1E27FF39D578DA5FB69113C.jpg','2020-04-08 09:26:56'),(15,NULL,'new@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','Nikolay Egorov','images/upload/avatars/B671943C568B53A5F3B6FD64CEDF2260.jpg','2020-04-08 09:33:40'),(17,NULL,'some@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','some','images/upload/avatars/A9C325F46F2FF23D081BA991A15C154F.jpg','2020-04-08 09:35:54'),(20,NULL,'igor@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','igor',NULL,'2020-04-08 09:36:47'),(25,NULL,'anyone@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','anyone',NULL,'2020-04-08 09:39:27'),(28,NULL,'newone@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','Ivan Semenov',NULL,'2020-04-08 09:40:39'),(129,NULL,'someExample36332@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample36332',NULL,'2020-04-12 20:11:18'),(134,NULL,'petya@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','petya',NULL,'2020-04-13 11:06:58'),(136,NULL,'sasha@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','sasha',NULL,'2020-04-13 11:08:01'),(138,NULL,'fedya@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','Fedor Ivanovich',NULL,'2020-04-13 11:18:22'),(144,NULL,'max@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','Maximka','images/upload/avatars/ED2B2DE7331CAAD8744803860DCFA5E0.jpg','2020-04-13 11:23:28'),(184,NULL,'someExample23002@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample23002',NULL,'2020-04-13 18:53:44'),(186,NULL,'someExample38473@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample38473',NULL,'2020-04-13 18:56:11'),(188,NULL,'someExample52789@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample52789',NULL,'2020-04-13 20:59:21'),(203,NULL,'someExample77948@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample77948',NULL,'2020-04-14 18:54:43'),(205,NULL,'someExample22325@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample22325',NULL,'2020-04-14 19:56:10'),(207,NULL,'someExample66065@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample66065',NULL,'2020-04-14 20:35:30'),(209,NULL,'someExample91529@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample91529',NULL,'2020-04-14 20:37:24'),(211,NULL,'someExample17033@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample17033',NULL,'2020-04-15 15:57:40'),(213,NULL,'someExample12594@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample12594',NULL,'2020-04-15 16:48:12'),(215,NULL,'someExample87508@mail.ru','5F4DCC3B5AA765D61D8327DEB882CF99','\0','someExample87508',NULL,'2020-04-15 16:48:33'),(222,NULL,'someNewPassword@mail.ru','DEFE6F8DAF04EBDE38277EEE0903C4ED','\0','someNewPassword',NULL,'2020-04-15 20:31:06');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'blogdb'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-04-20  9:12:28
